{"version":3,"sources":["./src/app/models/group-conversation.model.ts","./src/app/components/toast/toast.service.ts","./src/app/components/change-password-modal/change-password-modal.component.ts","./src/app/components/change-password-modal/change-password-modal.component.html","./src/app/services/contact.service.ts","./src/app/models/message.model.ts","./src/app/components/join-group-conversation-modal/join-group-conversation-modal.component.ts","./src/app/components/join-group-conversation-modal/join-group-conversation-modal.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/message/message.component.ts","./src/app/components/message/message.component.html","./src/app/components/received-contact-requests/received-contact-requests.component.ts","./src/app/components/received-contact-requests/received-contact-requests.component.html","./src/app/models/multimedia-message.model.ts","./src/app/components/conversation-detail/conversation-detail.component.ts","./src/app/components/conversation-detail/conversation-detail.component.html","./src/app/components/find-contact-modal/find-contact-modal.component.ts","./src/app/components/find-contact-modal/find-contact-modal.component.html","./src/environments/environment.ts","./src/app/models/contact.model.ts","./src/app/components/toast/toast.component.ts","./src/app/components/toast/toast.component.html","./src/app/components/delete-account-modal/delete-account-modal.component.ts","./src/app/components/delete-account-modal/delete-account-modal.component.html","./src/app/components/conversation-list/conversation-list.component.ts","./src/app/components/conversation-list/conversation-list.component.html","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/services/session.service.ts","./src/app/components/welcome/welcome.component.ts","./src/app/components/welcome/welcome.component.html","./src/app/models/conversation.model.ts","./src/app/utils/file-util.ts","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/models/account.model.ts","./src/app/components/contacts/contacts.component.ts","./src/app/components/contacts/contacts.component.html","./src/app/components/contact-features/contact-features.component.ts","./src/app/components/contact-features/contact-features.component.html","./src/app/components/conversations/conversations.component.ts","./src/app/components/conversations/conversations.component.html","./src/app/components/user-profile-modal/user-profile-modal.component.ts","./src/app/components/user-profile-modal/user-profile-modal.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/confirm-modal/confirm-modal.component.ts","./src/app/components/confirm-modal/confirm-modal.component.html","./src/app/models/user.model.ts","./src/app/models/text-message.model.ts","./src/app/config.ts","./src/app/components/signin/signin.component.ts","./src/app/components/signin/signin.component.html","./src/app/requests/signup.request.ts","./src/app/app.module.ts","./src/app/utils/observable.util.ts","./src/app/components/voice-recorder-modal/voice-recorder-modal.component.ts","./src/app/components/voice-recorder-modal/voice-recorder-modal.component.html","./src/app/components/sent-contact-requests/sent-contact-requests.component.ts","./src/app/components/sent-contact-requests/sent-contact-requests.component.html","./src/app/services/auth.service.ts","./src/app/directives/scroll-to-bottom.directive.ts","./src/app/services/user.service.ts","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/services/file-fetcher.service.ts","./src/app/components/group-conversation-modal/group-conversation-modal.component.ts","./src/app/components/group-conversation-modal/group-conversation-modal.component.html","./src/app/components/view-modal/view-modal.component.ts","./src/app/components/view-modal/view-modal.component.html","./src/app/services/stomp.service.ts","./src/app/services/conversation.service.ts","./src/app/requests/delete-account.request.ts","./src/app/app-routing.module.ts","./src/app/services/voice-recorder.service.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/requests/change-password.request.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { SessionService } from \"../services/session.service\";\r\nimport { ConversationModel } from \"./conversation.model\";\r\n\r\nexport class GroupConversationModel extends ConversationModel {\r\n    name: string;\r\n    ownerId: string;\r\n    avatarCode: string;\r\n\r\n    constructor(){\r\n        super();\r\n        this.instanceOf = \"GROUP\";\r\n    }  \r\n\r\n    static isOwner(conversation: ConversationModel): boolean {\r\n        return (conversation as GroupConversationModel).ownerId === SessionService.getCurrentUser().id;\r\n    }\r\n}","import { Injectable} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface Toast {\r\n\tcontent?: string;\r\n\tclassname?: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ToastService {\r\n\r\n\tprivate toasts: Toast[] = [];\r\n\tprivate toastsSubject: Subject<Toast[]> = new Subject<Toast[]>();\r\n\ttoasts$ = this.toastsSubject.asObservable();\r\n\r\n\tconstructor() {}\r\n\r\n\tshow(content: string, isSuccess: boolean): void {\r\n\t\tconst classname: string = isSuccess ? 'bg-success' : 'bg-danger';\r\n\r\n\t\tconst toast: Toast = {\r\n\t\t\tcontent: content,\r\n\t\t\tclassname: `text-light ${classname}`\r\n\t\t};\r\n\r\n\t\tthis.toasts.push(toast);\r\n\t\tthis.toastsSubject.next(this.toasts);\r\n\t}\r\n\r\n\tremove(toast: Toast): void {\r\n\t\tthis.toasts = this.toasts.filter((t) => t !== toast);\r\n\t\tthis.toastsSubject.next(this.toasts);\r\n\t}\r\n}","import { Component } from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\nimport { ChangePasswordRequest } from 'src/app/requests/change-password.request';\r\n\r\n@Component({\r\n  selector: 'app-change-password-modal',\r\n  templateUrl: './change-password-modal.component.html',\r\n  styleUrls: ['./change-password-modal.component.css']\r\n})\r\nexport class ChangePasswordModalComponent {\r\n\r\n  changePasswordRequest?: ChangePasswordRequest = new ChangePasswordRequest();\r\n\r\n  loading: boolean = false;\r\n  errorMessage?: string;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private authService: AuthService){}\r\n\r\n  onSaved(): void {\r\n    this.loading = true;\r\n    this.changePasswordRequest.userId = SessionService.getCurrentUser().id;\r\n    this.authService.changePassword(this.changePasswordRequest).subscribe(\r\n      () => {\r\n        this.onClosed();\r\n      },\r\n      (errorRes: any) => {\r\n        this.loading = false;\r\n        this.errorMessage = errorRes.error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n}\r\n","\r\n<div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">User account</h5>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"mb-2\">\r\n        <label for=\"old-password\" class=\"form-label\">Old password</label>\r\n        <input ngbAutofocus [(ngModel)]=\"changePasswordRequest.oldPassword\" id=\"old-password\" type=\"password\" class=\"form-control\" placeholder=\"Type your old password\" autofocus>\r\n    </div>\r\n    <div class=\"mb-2\">\r\n        <label for=\"new-password\" class=\"form-label\">New password</label>\r\n        <input [(ngModel)]=\"changePasswordRequest.newPassword\" id=\"new-password\" type=\"password\" class=\"form-control\" placeholder=\"Type your new password\">\r\n    </div>\r\n    <div class=\"mb-2\">\r\n        <input [(ngModel)]=\"changePasswordRequest.confirmNewPassword\" type=\"password\" class=\"form-control\" placeholder=\"Type your new password again\">\r\n    </div>\r\n    <div class=\"mb-2\">\r\n        <p class=\"text-danger\">{{errorMessage}}</p>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n    <button (click)=\"onSaved()\" [disabled]=\"loading\" type=\"button\" class=\"btn btn-success\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n        Save\r\n    </button>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nimport { ContactModel } from \"../models/contact.model\";\r\nimport { ResponseModel } from \"../models/response.model\";\r\nimport { ObservableUtil } from \"../utils/observable.util\";\r\nimport { FileFetcherService } from \"./file-fetcher.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n    private CONTACT_BASE_URL: string = `${API_BASE_URL}/contacts`;\r\n    \r\n    contacts: Map<string, ContactModel> = new Map<string, ContactModel>();\r\n    receivedContactRequests: Map<string, ContactModel> = new Map<string, ContactModel>();\r\n    sentContactRequests: Map<string, ContactModel> = new Map<string, ContactModel>();\r\n\r\n    private contactsSubject: Subject<ContactModel[]> = \r\n        new Subject<ContactModel[]>();\r\n    contacts$ = this.contactsSubject.asObservable();\r\n\r\n    private receivedContactRequestsSubject: Subject<ContactModel[]> = \r\n        new Subject<ContactModel[]>();\r\n    receivedContactRequests$ = this.receivedContactRequestsSubject.asObservable();\r\n\r\n    private sentContactRequestsSubject: Subject<ContactModel[]> = \r\n        new Subject<ContactModel[]>();\r\n    sentContactRequests$ = this.sentContactRequestsSubject.asObservable();\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    findContacts(userId: string): Observable<ResponseModel> {\r\n        return this.http.get<ResponseModel>(`${this.CONTACT_BASE_URL}/participants/${userId}`).pipe(\r\n            tap((res: ResponseModel) => {\r\n                const foundContacts: ContactModel[] = res.data;\r\n                this.contacts = new Map(foundContacts.map(contact => [contact.id, contact]));\r\n                ObservableUtil.notify(this.contactsSubject, foundContacts);\r\n            })\r\n        );\r\n    }\r\n\r\n    findReceivedContactRequests(userId: string): Observable<ResponseModel> {\r\n        return this.http.get<ResponseModel>(`${this.CONTACT_BASE_URL}/received/participants/${userId}`).pipe(\r\n            tap((res: ResponseModel) => {\r\n                const foundReceivedContactRequests: ContactModel[] = res.data;\r\n                this.receivedContactRequests = new Map(foundReceivedContactRequests.map(request => [request.id, request]));\r\n                ObservableUtil.notify(this.receivedContactRequestsSubject, foundReceivedContactRequests);\r\n            })\r\n        );\r\n    }\r\n\r\n    findSentContactRequests(userId: string): Observable<ResponseModel> {\r\n        return this.http.get<ResponseModel>(`${this.CONTACT_BASE_URL}/sent/participants/${userId}`).pipe(\r\n            tap((res: ResponseModel) => {\r\n                const foundSentContactRequests: ContactModel[] = res.data;\r\n                this.sentContactRequests = new Map(foundSentContactRequests.map(request => [request.id, request]));\r\n                ObservableUtil.notify(this.sentContactRequestsSubject, foundSentContactRequests);\r\n            })\r\n        );\r\n    }\r\n\r\n    sendRequest(contact: ContactModel): Observable<ResponseModel> {\r\n        return this.http.post<ResponseModel>(`${this.CONTACT_BASE_URL}`, contact)\r\n            .pipe(\r\n                tap((res: ResponseModel) => {\r\n                    const newContactId: string = res.data;\r\n                    contact.id = newContactId;\r\n                    this.sentContactRequests.set(newContactId, contact);\r\n                    ObservableUtil.notify(this.sentContactRequestsSubject, this.sentContactRequests);\r\n                })\r\n            );\r\n    }\r\n\r\n    acceptRequest(contactId: string): Observable<ResponseModel> {\r\n        return this.http.patch<ResponseModel>(`${this.CONTACT_BASE_URL}/${contactId}`, null).pipe(\r\n            tap(() => {\r\n                this.receivedContactRequests.delete(contactId);\r\n                ObservableUtil.notify(this.receivedContactRequestsSubject, this.receivedContactRequests);\r\n            })\r\n        );\r\n    }\r\n\r\n    declineRequest(contactId: string): Observable<ResponseModel> {\r\n        return this.http.delete<ResponseModel>(`${this.CONTACT_BASE_URL}/${contactId}`).pipe(\r\n            tap(() => {\r\n                this.receivedContactRequests.delete(contactId);\r\n                ObservableUtil.notify(this.receivedContactRequestsSubject, this.receivedContactRequests);\r\n            })\r\n        );\r\n    }\r\n\r\n    deleteSentRequest(contactId: string): Observable<ResponseModel> {\r\n        return this.http.delete<ResponseModel>(`${this.CONTACT_BASE_URL}/${contactId}`).pipe(\r\n            tap(() => {\r\n                this.sentContactRequests.delete(contactId);\r\n                ObservableUtil.notify(this.sentContactRequestsSubject, this.sentContactRequests);\r\n            })\r\n        );\r\n    }\r\n\r\n    deleteContact(contactId: string): Observable<ResponseModel> {\r\n        return this.http.delete<ResponseModel>(`${this.CONTACT_BASE_URL}/${contactId}`).pipe(\r\n            tap(() => {\r\n                this.contacts.delete(contactId);\r\n                ObservableUtil.notify(this.contactsSubject, this.contacts);\r\n            })\r\n        );\r\n    }\r\n\r\n}","import { SessionService } from \"../services/session.service\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport class MessageModel {\r\n    id: string;\r\n    sentAt: string;\r\n    sender: UserModel;\r\n    conversationId: string;\r\n    instanceOf: string;\r\n    status: string;\r\n\r\n    static isTextMessage(message: MessageModel): boolean {\r\n        return message.instanceOf === 'TEXT';\r\n    }\r\n\r\n    static isSentMessage(message: MessageModel): boolean {\r\n        const CURRENT_USER: UserModel = SessionService.getCurrentUser();\r\n        return message.sender.id === CURRENT_USER.id;\r\n    }\r\n}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\n\r\nimport { ResponseModel } from 'src/app/models/response.model';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-join-group-conversation-modal',\r\n  templateUrl: './join-group-conversation-modal.component.html',\r\n  styleUrls: ['./join-group-conversation-modal.component.css']\r\n})\r\nexport class JoinGroupConversationModalComponent {\r\n \r\n  @ViewChild(\"conversationIdInput\") conversationIdInput: ElementRef;\r\n\r\n  errorMessage?: string;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private toastService: ToastService,\r\n    private conversationService: ConversationService) { }\r\n  \r\n  onJoined(): void {\r\n    const conversationId: string = this.conversationIdInput.nativeElement.value;\r\n    const joinerId: string = SessionService.getCurrentUser().id;\r\n\r\n    this.conversationService.joinGroupConversation(conversationId, joinerId).subscribe(\r\n      () => {\r\n        this.onClosed();\r\n        this.toastService.show(\"Conversation joined successfully\", true);\r\n      },\r\n      (error: any) => {\r\n        this.errorMessage = error.error.message;\r\n      }\r\n    )\r\n  }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">Join group conversation</h5>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"mb-2\">\r\n        <label for=\"conversationId\" class=\"form-label\">Conversation id</label>\r\n        <input #conversationIdInput id=\"Confirm\" type=\"text\" class=\"form-control\" placeholder=\"Type a conversation id\"/>\r\n    </div>\r\n    <div class=\"text-danger\">{{errorMessage}}</div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n    <button (click)=\"onJoined()\" type=\"button\" class=\"btn btn-success\">Join</button>\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ResponseModel } from 'src/app/models/response.model';\nimport { SignupRequest } from 'src/app/requests/signup.request';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SessionService } from 'src/app/services/session.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignUpComponent{\n\n  request: SignupRequest = new SignupRequest();\n  \n  loading: boolean = false;\n  errorMessage?: string;\n  \n  constructor(private router: Router, \n    private authService: AuthService) {\n  }\n\n  signUp(): void {\n    this.loading = true;\n    this.authService.signUp(this.request)\n      .subscribe(\n        (res: ResponseModel) => {\n          SessionService.setCurrentUser(res.data);\n          this.router.navigate(['/conversations']);\n        },\n        (error: any) => {\n          this.loading = false;\n          this.errorMessage = error.error.message;\n        }\n      );\n    \n  }\n\n}\n","<h3 class=\"text-center font-weight-bold p-5\">SIGN UP</h3>\n<div class=\"form-group my-3\">\n    <input [(ngModel)]=\"request.username\" class=\"form-control py-2\" type=\"text\" placeholder=\"User number\" autofocus/>\n</div>\n<div class=\"form-group my-3\">\n    <input [(ngModel)]=\"request.password\" class=\"form-control py-2\" type=\"password\" placeholder=\"Password\"/>\n</div>\n<div class=\"form-group my-3\">\n    <input [(ngModel)]=\"request.confirmPassword\" class=\"form-control py-2\" type=\"password\" placeholder=\"Confirm password\"/>\n</div>\n<div  class=\"text-danger\">{{errorMessage}}</div>\n<button (click)=\"signUp()\" [disabled]=\"loading\" class=\"btn form-control btn-success py-2 mt-3\" type=\"button\">\n    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n    Sign up\n</button>\n<div class=\"text-center p-2 mt-5\">\n    <small class=\"text-secondary\">Have already an account?\n        <a routerLink=\"/auth/signin\">Sign in now</a>\n    </small>\n</div>","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\n\r\nimport { ViewModalComponent } from '../view-modal/view-modal.component';\r\n\r\nimport { ConversationModel } from 'src/app/models/conversation.model';\r\nimport { MessageModel } from 'src/app/models/message.model';\r\n\r\nimport { NgbModal, NgbModalOptions, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GroupConversationModel } from 'src/app/models/group-conversation.model';\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { MultimediaMessageModel } from 'src/app/models/multimedia-message.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\n\r\n@Component({\r\n  selector: 'app-message',\r\n  templateUrl: './message.component.html',\r\n  styleUrls: ['./message.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MessageComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  @Input() messageType: string;\r\n\r\n  @Input() message: MessageModel;\r\n\r\n  @Input() currentMessage: MessageModel;\r\n\r\n  @Input() conversation: ConversationModel;\r\n\r\n  @ViewChild('progressbarWrapper') progressbarWrapper: ElementRef;\r\n  @ViewChild('progressbar') progressbar: ElementRef;\r\n  @ViewChild('content') contentElement: ElementRef;\r\n\r\n  private fileUploadedSubscription: Subscription;\r\n\r\n  progress: number = 0;\r\n\r\n  constructor(private ngbModal: NgbModal,\r\n    private conversationService: ConversationService,\r\n    private cd: ChangeDetectorRef) { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  ngAfterViewInit(): void {\r\n    this.fileUploadedSubscription = this.conversationService.fileUploaded$.subscribe(\r\n      (res: number) => {\r\n        this.progress = res;\r\n        this.updateProgress(this.progress);\r\n      }\r\n    );\r\n  }\r\n\r\n  updateProgress(progress: number): void {\r\n    this.progress = progress;\r\n    if (this.progress === 100) {\r\n      this.progressbarWrapper.nativeElement.classList.add('d-none');\r\n      this.progress = 0;\r\n    }else {\r\n      if (this.progressbarWrapper.nativeElement.classList.contains('d-none')) {\r\n        this.progressbarWrapper.nativeElement.classList.remove('d-none');\r\n      }\r\n      this.progressbar.nativeElement.style.width = this.progress + '%';\r\n      this.progressbar.nativeElement.innerHTML = this.progress + '%';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.fileUploadedSubscription.unsubscribe();\r\n  }\r\n\r\n  getAvatar(): string {\r\n    return FileUtil.getURL(this.message.sender.avatarCode);\r\n  }\r\n\r\n  isSentMessage(): boolean {\r\n    return MessageModel.isSentMessage(this.message);\r\n  }\r\n\r\n  isOwner(): boolean {\r\n    if (ConversationModel.isGroupConversation(this.conversation) && GroupConversationModel.isOwner(this.conversation)){\r\n      return this.message.sender.id === (this.conversation as GroupConversationModel).ownerId;\r\n    }\r\n  }\r\n\r\n  getInlineData(): string {\r\n    if (!MessageModel.isTextMessage(this.message)) {\r\n      const multimediaMessage: MultimediaMessageModel = this.message as MultimediaMessageModel;\r\n      return FileUtil.getURL(multimediaMessage.fileCode);\r\n    }\r\n  }\r\n\r\n  getAttachmentData(): string {\r\n    if (!MessageModel.isTextMessage(this.message)) {\r\n      const multimediaMessage: MultimediaMessageModel = this.message as MultimediaMessageModel;\r\n      return FileUtil.getAttachment(multimediaMessage.fileCode);\r\n    }\r\n  }\r\n\r\n  onViewModalOpened(): void {\r\n    const NGB_MODAL_OPTIONS: NgbModalOptions = {\r\n      backdrop : 'static',\r\n      keyboard : false,\r\n      size: 'fullscreen'\r\n    }\r\n    const modalRef: NgbModalRef = this.ngbModal.open(ViewModalComponent, NGB_MODAL_OPTIONS);\r\n    modalRef.componentInstance.message = this.message;\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-start py-3\" [ngClass]=\"{'justify-content-end': isSentMessage(), 'justify-content-start': !isSentMessage()}\">\r\n    <div class=\"message-wrapper rounded p-2\" [ngClass]=\"{'bg-success text-light': isSentMessage(), 'bg-light-grey text-secondary': !isSentMessage()}\" >\r\n        <div class=\"d-flex flex-column\">\r\n            <div class=\"d-flex align-items-center mb-2\">\r\n                <img class=\"rounded-circle\" [src]=\"getAvatar()\" alt=\"Avatar\" width=\"40\" height=\"40\">\r\n                <div *ngIf=\"isOwner()\" class=\"ms-2\">\r\n                    <i class=\"fa-solid fa-key\"></i>\r\n                </div>\r\n                <small class=\"ms-2 text-truncate\">{{message.sender.name}}</small>\r\n            </div>\r\n            <div>\r\n                <ng-container [ngSwitch]=\"messageType\" >\r\n                    <p *ngSwitchCase=\"'TEXT'\" class=\"text-break\">{{message.content}}</p>\r\n                    <img *ngSwitchCase=\"'IMAGE'\" height=\"250\" class=\"rounded w-100 py-2\" [src]=\"getInlineData()\" alt=\"image\"/>\r\n                    <video *ngSwitchCase=\"'VIDEO'\" height=\"250\" class=\"rounded py-2 w-100\" [src]=\"getInlineData()\" controls></video>\r\n                    <audio *ngSwitchCase=\"'AUDIO'\" controls>\r\n                        <source [src]=\"getInlineData()\" type=\"audio/mp3\">\r\n                        Your browser does not support the audio tag.\r\n                    </audio>\r\n                    <ng-container *ngSwitchDefault>\r\n                        <ng-container [ngSwitch]=\"messageType\">\r\n                            <div class=\"d-flex align-items-center p-1\">\r\n                                <i *ngSwitchCase=\"'DOCUMENT'\" class=\"fa-solid fa-file-word fa-3x m-2 me-3\"></i>\r\n                                <i *ngSwitchCase=\"'SHEET'\" class=\"fa-solid fa-file-excel fa-3x m-2 me-3\"></i>\r\n                                <i *ngSwitchCase=\"'PRESENTATION'\" class=\"fa-solid fa-file-powerpoint fa-3x m-2 me-3\"></i>\r\n                                <i *ngSwitchCase=\"'PDF'\" class=\"fa-solid fa-file-pdf fa-3x m-2 me-3\"></i>\r\n                                <i *ngSwitchCase=\"'OTHER'\" class=\"fa-solid fa-file fa-3x m-2 me-3\"></i>\r\n                                <div class=\"d-flex flex-column\">\r\n                                    <a [href]=\"getAttachmentData()\" download=\"{{message.fileName}}\" class=\"small\" [ngClass]=\"{'text-light': isSentMessage(), 'text-secondary': !isSentMessage()}\">{{message.fileName}}</a>\r\n                                    <ng-container *ngIf=\"messageType === 'PDF' || messageType === 'OTHER'\">\r\n                                        <span (click)=\"onViewModalOpened()\" class=\"clickable small mt-2\">View now</span>\r\n                                    </ng-container>\r\n                                </div>\r\n                            </div>\r\n                            <div #progressbarWrapper *ngIf=\"message === currentMessage\" class=\"progress d-none\" role=\"progressbar\" aria-label=\"Example with label\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                                <div #progressbar class=\"progress-bar bg-info\">0%</div>\r\n                            </div>\r\n                        </ng-container>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n            <div class=\"d-flex justify-content-end align-items-center\">\r\n                <small>{{message.sentAt | date: 'dd/MM/yyyy HH:mm:ss'}}</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\r\n\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { ContactService } from 'src/app/services/contact.service';\r\n\r\nimport { ContactModel } from 'src/app/models/contact.model';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NGB_MODAL_BACKDROP_STATIC_OPTIONS } from 'src/app/config';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-received-contact-requests',\r\n  templateUrl: './received-contact-requests.component.html',\r\n  styleUrls: ['./received-contact-requests.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ReceivedContactRequestComponent implements OnInit, OnDestroy {\r\n\r\n  private receivedContactRequestsSubscription: Subscription;\r\n  private modalConfirmedSubscription: Subscription;\r\n  \r\n  receivedContactRequests: ContactModel[] = [];\r\n  filteredReceivedContactRequests: ContactModel[] = [];\r\n\r\n  constructor(private ngbModal: NgbModal,\r\n    private toastService: ToastService,\r\n    private cd: ChangeDetectorRef,\r\n    private contactService: ContactService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.receivedContactRequestsSubscription = this.contactService.receivedContactRequests$\r\n    .subscribe(\r\n      (receivedContactRequests: ContactModel[]) => {\r\n        this.receivedContactRequests = receivedContactRequests;\r\n        this.filteredReceivedContactRequests = this.receivedContactRequests;\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n    this.contactService.findReceivedContactRequests(SessionService.getCurrentUser().id).subscribe(\r\n      () => {},\r\n      (error) => this.toastService.show('Received loaded failed', false)\r\n    )\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.receivedContactRequestsSubscription.unsubscribe();\r\n  }\r\n\r\n  getAvatar(contact: ContactModel): string {\r\n    return FileUtil.getURL(contact.sender.avatarCode);\r\n  }\r\n\r\n  onSearched(value: string): void {\r\n    if (value === null){\r\n      this.filteredReceivedContactRequests = this.receivedContactRequests;\r\n      return;\r\n    }\r\n\r\n    const foundReceivedContactRequests: ContactModel[] = this.receivedContactRequests.filter(contact => {\r\n      return contact.sender.name.toLowerCase().includes(value.toLowerCase());\r\n    });\r\n\r\n    this.filteredReceivedContactRequests = foundReceivedContactRequests;\r\n  }\r\n\r\n  onAccepted(receivedContactRequest: ContactModel): void {\r\n    const modalRef: NgbModalRef = this.ngbModal.open(ConfirmModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n    this.modalConfirmedSubscription = modalRef.componentInstance.onModalConfirmed()\r\n      .subscribe(\r\n        () => {\r\n          this.contactService.acceptRequest(receivedContactRequest.id).subscribe(\r\n            () => {\r\n              this.toastService.show('Contact request accepted', true);\r\n            },\r\n            (error) => console.log(error)\r\n          );\r\n          this.modalConfirmedSubscription.unsubscribe();\r\n          modalRef.close();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeclined(receivedContactRequest: ContactModel): void {\r\n    const modalRef: NgbModalRef = this.ngbModal.open(ConfirmModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n    this.modalConfirmedSubscription = modalRef.componentInstance.onModalConfirmed()\r\n      .subscribe(\r\n        () => {\r\n          this.contactService.declineRequest(receivedContactRequest.id).subscribe(\r\n            () => {\r\n              this.toastService.show('Contact request declined', true);\r\n            },\r\n            (errorRes: any) => this.toastService.show(errorRes.error.message, false)\r\n          );\r\n          this.modalConfirmedSubscription.unsubscribe();\r\n          modalRef.close();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column h-100\">\r\n    <div class=\"d-flex align-items-center border-bottom ms-3 py-2 py-1\">\r\n        <i class=\"fa-regular fa-envelope fa-2x me-3\"></i>\r\n        <div class=\"text-secondary my-auto font-weight-bold h4 py-2\">Received contact requests</div>\r\n    </div>\r\n    <!-- Search bar -->\r\n    <div class=\"d-flex align-items-center m-2 \">\r\n        <div class=\"input-group py-2\">\r\n            <span class=\"input-group-text\">\r\n                <i class=\"fas fa-search\"></i>\r\n            </span>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" (input)=\"onSearched($event.target.value)\">\r\n        </div>\r\n    </div>\r\n    <!-- Contacts -->\r\n    <div class=\"border-bottom overflow-auto h-100 w-100 pe-3 flex-grow-1\">\r\n        <div class=\"list-group list-group-flush\">\r\n            <div *ngFor=\"let receivedContactRequest of filteredReceivedContactRequests\" class=\"list-group-item list-group-item-action\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <img class=\"rounded-circle\" [src]=\"getAvatar(receivedContactRequest)\" alt=\" \" width=\"50\" height=\"50\"/>\r\n                        <div class=\"ms-3 w-100\">\r\n                            <div class=\"my-auto text-truncate font-weight-bold flex-grow-1\">{{receivedContactRequest.sender.name}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-end align-items-center\">\r\n                        <button (click)=\"onAccepted(receivedContactRequest)\" type=\"button\" class=\"btn btn-white me-1\">\r\n                            <i class=\"fa-solid fa-check fa-lg text-success\"></i>\r\n                        </button>\r\n                        <button (click)=\"onDeclined(receivedContactRequest)\" type=\"button\" class=\"btn btn-white\">\r\n                            <i class=\"fa-solid fa-x fa-lg text-danger\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { MessageModel } from \"./message.model\";\r\n\r\nexport class MultimediaMessageModel extends MessageModel {\r\n    fileCode: string;\r\n    fileName: string;\r\n    fileType: string;\r\n\r\n    constructor(){\r\n        super();\r\n        this.instanceOf = \"MULTIMEDIA\";\r\n    }\r\n\r\n    static isOtherType(message: MultimediaMessageModel): boolean {\r\n        return !MessageModel.isTextMessage(message) && message.fileType === 'OTHER';\r\n    }\r\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, Input, OnDestroy, OnInit, QueryList, Renderer2, ViewChild, ViewChildren } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConversationModel } from 'src/app/models/conversation.model';\r\nimport { MessageModel } from 'src/app/models/message.model';\r\nimport { GroupConversationModalComponent } from '../group-conversation-modal/group-conversation-modal.component';\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\r\nimport { VoiceRecorderModalComponent } from '../voice-recorder-modal/voice-recorder-modal.component';\r\nimport { NgbModal, NgbModalOptions, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { switchMap, takeUntil } from 'rxjs/operators';\r\nimport { ToastService } from '../toast/toast.service';\r\nimport { MessageService } from 'src/app/services/message.service';\r\nimport { TextMessageModel } from 'src/app/models/text-message.model';\r\nimport { MultimediaMessageModel } from 'src/app/models/multimedia-message.model';\r\nimport { GroupConversationModel } from 'src/app/models/group-conversation.model';\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { MessageComponent } from '../message/message.component';\r\n\r\n@Component({\r\n  selector: 'app-conversation-detail',\r\n  templateUrl: './conversation-detail.component.html',\r\n  styleUrls: ['./conversation-detail.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConversationDetailComponent implements OnInit, OnDestroy{\r\n\r\n  private conversationSubscription: Subscription;\r\n  private modalConfirmedSubscription: Subscription;\r\n\r\n  @ViewChild('fileInput') fileInput: any;\r\n  @ViewChildren('messageElements') messageElements: QueryList<MessageComponent>;\r\n  @ViewChild('chatWindow') chatWindow: ElementRef;\r\n\r\n  conversation: ConversationModel;\r\n\r\n  page: number = 0;\r\n\r\n  private scrollToBottomMode: boolean = true;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute, \r\n    private ngbModal: NgbModal,\r\n    private router: Router,\r\n    private cd: ChangeDetectorRef,\r\n    private toastService: ToastService,\r\n    private conversationService: ConversationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.pipe(\r\n      switchMap((params: ParamMap) => {\r\n        const conversationId: string = params.get('id');\r\n        return this.conversationService.findOne(conversationId, SessionService.getCurrentUser().id);\r\n     })\r\n    ).subscribe(() => {\r\n      this.conversationService.markConversationAsRead(this.conversation.id);\r\n    });\r\n\r\n    this.conversationSubscription = this.conversationService.curentConversation$.subscribe(\r\n      (conversation: ConversationModel) => {\r\n        this.conversation = conversation;\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n    this.conversationService.subscribeMarkNewMessageAsRead();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.conversationSubscription.unsubscribe();\r\n  }\r\n\r\n  onScroll(event: any) {\r\n\r\n    this.scrollToBottomMode = event.target.scrollTop === 0;\r\n  \r\n    if (event.target.scrollHeight + event.target.scrollTop === event.target.clientHeight) {\r\n      this.page++;\r\n      this.conversationService.fetchMessages(this.conversation.id, this.page).subscribe();\r\n    }\r\n  }\r\n\r\n  getAvatar(): string {\r\n    return FileUtil.getURL(ConversationModel.getAvatarCode(this.conversation));\r\n  }\r\n\r\n  getName(): string {\r\n    return ConversationModel.getName(this.conversation);\r\n  }\r\n\r\n  activateScrollToBottomMode(): void {\r\n    this.scrollToBottomMode = true;\r\n    this.chatWindow.nativeElement.scrollTop = this.chatWindow.nativeElement.scrollHeight;\r\n    console.log(this.chatWindow.nativeElement.scrollTop);\r\n  }\r\n\r\n\r\n  isSentMessage(message: MessageModel): boolean {\r\n    return MessageModel.isSentMessage(message);\r\n  }\r\n\r\n  isGroupConversation(): boolean {\r\n    return ConversationModel.isGroupConversation(this.conversation);\r\n  }\r\n\r\n  openUpdateGroupConversationModal(): void {\r\n    if (ConversationModel.isGroupConversation(this.conversation) && GroupConversationModel.isOwner(this.conversation)) {\r\n      const modalRef: NgbModalRef = this.ngbModal.open(GroupConversationModalComponent);\r\n      modalRef.componentInstance.isCreationMode = false;\r\n    }\r\n  }\r\n\r\n  getMessageType(message: MessageModel): string {\r\n    return MessageModel.isTextMessage(message) ? message.instanceOf : (message as MultimediaMessageModel).fileType;\r\n  }\r\n\r\n  sendTextMessage(inputElement: HTMLInputElement): void {\r\n    if (inputElement.value.trim() === '') {\r\n      return;\r\n    }\r\n    const message: TextMessageModel = new TextMessageModel();\r\n    message.sender = SessionService.getCurrentUser();\r\n    message.content = inputElement.value;\r\n    message.conversationId = this.conversation.id;\r\n\r\n    inputElement.value = '';\r\n    this.scrollToBottomMode = true;\r\n\r\n    this.conversationService.sendTextMessage(message);\r\n  }\r\n\r\n  onCopyLink(): void {\r\n    navigator.clipboard.writeText(`${this.conversation.id}`);\r\n    this.toastService.show('Group id copied', true);\r\n  }\r\n\r\n  onLeaveGroup(): void {\r\n    const modalRef: NgbModalRef = this.ngbModal.open(ConfirmModalComponent);\r\n    this.modalConfirmedSubscription = modalRef.componentInstance.onModalConfirmed()\r\n      .subscribe(\r\n        () => {\r\n          this.conversationService.leaveGroupConversation(this.conversation.id, SessionService.getCurrentUser().id).subscribe(\r\n            () => {\r\n              this.modalConfirmedSubscription.unsubscribe();\r\n              modalRef.close();\r\n              this.router.navigate(['/conversations']);\r\n              this.toastService.show(\"Conversation left successfully\", true);\r\n            },\r\n            (errorRes: any) => this.toastService.show(errorRes.error.message, false)\r\n          );\r\n        }\r\n    );\r\n  }\r\n\r\n  onFileChosen(): void {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n\r\n  async onFileSelected(event: any): Promise<void> {\r\n\r\n    const selectedFile: File = event.target.files[0];\r\n\r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n\r\n    const message: MultimediaMessageModel = new MultimediaMessageModel();\r\n\r\n    message.conversationId = this.conversation.id;\r\n    message.sender = SessionService.getCurrentUser();\r\n    message.fileName = selectedFile.name;\r\n    message.conversationId = this.conversation.id;\r\n    message.fileName = selectedFile.name;\r\n    message.fileType = FileUtil.getType(selectedFile);\r\n    this.scrollToBottomMode = true;\r\n\r\n    this.conversationService.sendMultimediaMessage(message, selectedFile).subscribe(\r\n      (res: any) => {\r\n        this.toastService.show('File uploaded successfully', true);\r\n      },\r\n      (errorRes: any) => this.toastService.show(errorRes.error.message, false)\r\n    );\r\n\r\n    this.fileInput.nativeElement.value = '';\r\n  }\r\n\r\n  onVoiceRecorderModalOpened(): void {\r\n    const NGB_MODAL_OPTIONS: NgbModalOptions = {\r\n      backdrop : 'static',\r\n      keyboard : false,\r\n      centered: true,\r\n      size: 'lg'\r\n    };\r\n    this.ngbModal.open(VoiceRecorderModalComponent, NGB_MODAL_OPTIONS);\r\n  }\r\n}\r\n","<ng-container *ngIf=\"conversation\">\r\n    <div class=\"d-flex flex-column h-100 w-100\">\r\n        <!-- Header -->\r\n        <div class=\"d-flex justify-content-between border-bottom px-2 py-1 flex-grow-0 w-100\">\r\n            <div class=\"d-flex align-items-center\" style=\"width: 40%\">\r\n                <img (click)=\"openUpdateGroupConversationModal()\" [src]=\"getAvatar()\" class=\"rounded-circle\"  alt=\"ChatAvatar\" width=\"50\" height=\"50\"/>\r\n                <div class=\"ms-3 overflow-hidden\">\r\n                    <div class=\"h6 text-truncate font-weight-bold\">{{getName()}}</div>\r\n                    <ng-container *ngIf=\"isGroupConversation()\">\r\n                        <a>{{conversation.participants.length}} participants</a>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n            <div class=\"d-flex align-items-center\">\r\n                <i class=\"fas fa-video-camera p-3\" aria-hidden=\"true\"></i>\r\n                <i class=\"fas fa-phone p-3\" aria-hidden=\"true\"></i>\r\n                <i class=\"fas fa-search p-3\" aria-hidden=\"true\"></i>\r\n                <div class=\"input-group p-3 d-none\" >\r\n                    <div class=\"input-group-prepend\">\r\n                        <span class=\"input-group-text\">\r\n                            <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Search messages...\">\r\n                </div>\r\n                <ng-container *ngIf=\"isGroupConversation()\">\r\n                    <i id=\"conversationDetailEllipsisDropdown\" class=\"fas fa-ellipsis-vertical p-3\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></i>\r\n                    <div class=\"dropdown\">\r\n                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"conversationDetailEllipsisDropdown\">\r\n                            <button (click)=\"onCopyLink()\" class=\"dropdown-item\">Copy link</button>\r\n                            <li><hr class=\"dropdown-divider\"></li>\r\n                            <button (click)=\"onLeaveGroup()\" class=\"dropdown-item text-danger\">Leave group</button>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n        <!-- Chat window -->\r\n        <div #chatWindow  class=\"position-relative overflow-hidden border-bottom flex-grow-1\" >\r\n            <div class=\"h-100 overflow-y-auto overflow-x-hidden d-flex flex-column-reverse \" (scroll)=\"onScroll($event)\">\r\n                <ng-container *ngFor=\"let message of conversation?.messages\">\r\n                    <div [ngSwitch]=\"isSentMessage(message)\" id=\"{{message.id}}\" >\r\n                        <app-message #messageElements [conversation]=\"conversation\"  [currentMessage]=\"currentMessage\" [message]=\"message\" [messageType]=\"getMessageType(message)\"></app-message>\r\n                    </div>\r\n                </ng-container>\r\n            </div>  \r\n            <div [class.invisible]=\"scrollToBottomMode\" class=\"position-absolute start-50 bottom-0 translate-middle-x mb-2\">\r\n                <button (click)=\"activateScrollToBottomMode()\" type=\"button\" class=\"btn btn-success rounded-circle\">\r\n                    <i class=\"fas fa-arrow-down\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <!-- Input area -->\r\n        <div class=\"d-flex align-items-center flex-grow-0\">\r\n            <div class=\"d-flex align-items-center\">\r\n                <!-- <i class=\"fas fa-smile-o p-3\"  aria-hidden=\"true\"></i> -->\r\n                <button (click)=\"onFileChosen()\" type=\"button\" class=\"btn\">\r\n                    <input #fileInput type=\"file\" class=\"d-none\" (change)=\"onFileSelected($event)\">\r\n                    <i class=\"fas fa-paperclip py-3 px-1\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <button (click)=\"onVoiceRecorderModalOpened()\" type=\"button\" class=\"btn\">\r\n                    <i class=\"fas fa-microphone py-3 px-1\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n            <div class=\"flex-grow-1\">\r\n                <input #textInput (keyup.enter)=\"sendTextMessage(textInput)\" class=\"py-3 form-control \" type=\"text\"\r\n                          placeholder=\"Type a message...\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</ng-container>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ContactService } from 'src/app/services/contact.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\n\r\nimport { ResponseModel } from 'src/app/models/response.model';\r\nimport { ContactModel } from 'src/app/models/contact.model';\r\nimport { UserModel } from 'src/app/models/user.model';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-find-contact-modal',\r\n  templateUrl: './find-contact-modal.component.html',\r\n  styleUrls: ['./find-contact-modal.component.css'],\r\n})\r\nexport class FindContactModelComponent {\r\n\r\n  disabled: boolean;\r\n\r\n  foundUser?: UserModel;\r\n  \r\n  errorMessage?: string;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private contactService: ContactService,\r\n    private toastService: ToastService,\r\n    private userService: UserService){}\r\n  \r\n  getAvatar(): string {\r\n    return FileUtil.getURL(this.foundUser.avatarCode);\r\n  }\r\n\r\n  onUserFound(value: string): void {\r\n    const userId: string = value;\r\n    \r\n    if (userId == SessionService.getCurrentUser().id){\r\n      this.disabled = true;\r\n      this.foundUser = SessionService.getCurrentUser();\r\n      return;\r\n    }\r\n\r\n    this.disabled = false;\r\n    this.userService.findOne(userId).subscribe(\r\n      (res: ResponseModel) => {\r\n        this.foundUser = res.data;\r\n        this.errorMessage = \"\";\r\n      },\r\n      (errorRes) => {\r\n        this.foundUser = null;\r\n        this.errorMessage = errorRes.error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onSent(): void {\r\n\r\n    if (!this.foundUser) {\r\n      this.errorMessage = \"User not found\";\r\n      return;\r\n    }\r\n\r\n    const contact: ContactModel = new ContactModel();\r\n    const sender: UserModel = new UserModel(SessionService.getCurrentUser().id);\r\n    const receiver: UserModel = new UserModel(this.foundUser.id);\r\n\r\n    contact.sender = sender;\r\n    contact.receiver = receiver;\r\n\r\n    this.contactService.sendRequest(contact).subscribe(\r\n      () => {\r\n        this.toastService.show('Contact request sent', true);\r\n        this.ngbActiveModal.close();\r\n      },\r\n      (errorRes) => {\r\n        this.errorMessage = errorRes.error.message;\r\n      }\r\n    );\r\n  }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">Add contact</h5>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" data-bs-dismiss=\"modal\" ></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"mb-5 row\">\r\n        <div class=\"col-9\">\r\n            <input #fileInput class=\"form-control\" type=\"text\" placeholder=\"Type an user id\">\r\n        </div>\r\n        <div class=\"col-3\">\r\n            <button (click)=\"onUserFound(fileInput.value)\" class=\"btn btn-success w-100\">Find</button>\r\n        </div>\r\n    </div>\r\n    <ng-container *ngIf=\"foundUser\">\r\n        <div class=\"mb-2 d-flex justify-content-center\">\r\n            <img [src]=\"getAvatar()\" class=\"rounded-circle border border-secondary\"\r\n                    width=\"100\" height=\"100\">\r\n        </div>\r\n        <div class=\"mb-2\">\r\n            <label for=\"nameInput\" class=\"form-label\">Name</label>\r\n            <input id=\"nameInput\" type=\"text\" class=\"form-control\" value=\"{{foundUser.name}}\" disabled>\r\n        </div>\r\n    </ng-container>\r\n    <div class=\"mb-2\">\r\n        <div class=\"text-danger\">{{errorMessage}}</div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\r\n    <button (click)=\"onSent()\" [disabled]=\"disabled\" type=\"button\" class=\"btn btn-success\">Send request</button>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { UserModel } from \"./user.model\";\r\n\r\nexport class ContactModel {\r\n    id: string;\r\n    sender: UserModel;\r\n    receiver: UserModel;\r\n    conversationId: string;\r\n}","import { Component, OnDestroy, OnInit} from '@angular/core';\n\nimport { Toast, ToastService } from './toast.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n\tselector: 'app-toast',\n\ttemplateUrl: './toast.component.html',\n\tstyleUrls: ['./toast.component.css']\n})\nexport class ToastComponent implements OnInit, OnDestroy {\n\n\ttoasts: Toast[] = [];\n\tprivate toastSubscription: Subscription;\n\n\tconstructor(private toastService: ToastService) {}\n\n\tngOnInit(): void {\n\t\tthis.toastSubscription = this.toastService.toasts$.subscribe(\n\t\t\t(toasts: Toast[]) => {\n\t\t\t\tthis.toasts = toasts;\n\t\t\t}\n\t\t);\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.toastSubscription.unsubscribe();\n\t}\n\n\tonClicked(toast: Toast): void {\n\t\tthis.toastService.remove(toast);\n\t}\n}\n\n","<div class=\"position-fixed bottom-0 end-0 p-3\">\n  <ngb-toast\n  *ngFor=\"let toast of toasts\"\n  [class]=\"toast.classname\"\n  [autohide]=\"true\"\n  [delay]=\"5000\"\n  (click)=\"onClicked(toast)\">\n  <div class=\"toast-body\">\n    <span>{{toast.content}}</span>\n  </div>\n  </ngb-toast>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DeleteAccountRequest } from 'src/app/requests/delete-account.request';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SessionService } from 'src/app/services/session.service';\nimport { ToastService } from '../toast/toast.service';\n\n@Component({\n  selector: 'app-delete-account-modal',\n  templateUrl: './delete-account-modal.component.html',\n  styleUrls: ['./delete-account-modal.component.css']\n})\nexport class DeleteAccountModalComponent{\n\n  @ViewChild('passwordInput') passwordInput!: ElementRef;\n\n  loading: boolean = false;\n  errorMessage?: string;\n\n  constructor(private ngbActiveModal: NgbActiveModal,\n    private router: Router,\n    private toastService: ToastService,\n    private authService: AuthService) { }\n\n\n  onDelete(): void {\n    this.loading = true;\n    const request: DeleteAccountRequest = new DeleteAccountRequest();\n    request.userId = SessionService.getCurrentUser().id;\n    request.password = this.passwordInput.nativeElement.value;\n\n    this.authService.deleteAccount(request).subscribe(\n      () => {\n        this.onClosed();\n        this.toastService.show('Account deleted successfully', true);\n        this.router.navigate(['/auth/signin']);\n      },\n      (errorRes: any) => {\n        this.loading = false;\n        this.errorMessage = errorRes.error.message;\n      }\n    );\n  }\n\n  onClosed(): void {\n    this.ngbActiveModal.close();\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">Delete account</h5>\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\n</div>\n<div class=\"modal-body\">\n    <div class=\"mb-2\">\n        <label for=\"passwordInput\" class=\"form-label\">Password</label>\n        <input #passwordInput ngbAutofocus id=\"passwordInput\" type=\"password\" class=\"form-control\" placeholder=\"Type your password to confirm\" >\n    </div>\n    <div class=\"mb-2\">\n        <div class=\"text-danger\">{{errorMessage}}</div>\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\n    <button (click)=\"onDelete()\" [disabled]=\"loading\" type=\"button\" class=\"btn btn-danger\">\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n        Delete\n    </button>\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConversationModel } from 'src/app/models/conversation.model';\r\nimport { MessageModel } from 'src/app/models/message.model';\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { ToastService } from '../toast/toast.service';\r\nimport { TextMessageModel } from 'src/app/models/text-message.model';\r\nimport { MultimediaMessageModel } from 'src/app/models/multimedia-message.model';\r\n\r\n@Component({\r\n  selector: 'app-conversation-list',\r\n  templateUrl: './conversation-list.component.html',\r\n  styleUrls: ['./conversation-list.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConversationListComponent implements OnInit, OnDestroy {\r\n\r\n  conversations: ConversationModel[] = [];\r\n  filteredConversations: ConversationModel[] = [];\r\n\r\n  conversationsSubscription: Subscription;\r\n\r\n  constructor(private conversationService: ConversationService,\r\n    private cd: ChangeDetectorRef,\r\n    private toastService: ToastService){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.conversationsSubscription = this.conversationService.conversations$\r\n      .subscribe((changedConversations: ConversationModel[]) => {\r\n        this.conversations = changedConversations;\r\n        this.filteredConversations = this.conversations;\r\n        this.cd.detectChanges();\r\n      });\r\n\r\n    this.conversationService.findAll(SessionService.getCurrentUser().id).subscribe(\r\n      () => {},\r\n      (error) => {\r\n        this.toastService.show('Conversations loaded failed', false);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.conversationsSubscription.unsubscribe();\r\n  }\r\n\r\n  getAvatar(conversation: ConversationModel): string {\r\n    return FileUtil.getURL(ConversationModel.getAvatarCode(conversation));\r\n  }\r\n\r\n  getName(conversation: ConversationModel): string {\r\n    return ConversationModel.getName(conversation);\r\n  }\r\n\r\n  getLastestMessage(conversation: ConversationModel): string {\r\n    if (conversation.lastestMessage === null) {\r\n      return '';\r\n    }\r\n\r\n    const lastestMessage = conversation.lastestMessage;\r\n    \r\n    // Handle text message\r\n\r\n    if (MessageModel.isTextMessage(lastestMessage)) {\r\n      const textMessage: TextMessageModel = lastestMessage as TextMessageModel;\r\n      return `${lastestMessage.sender.name}: ${textMessage.content}`;\r\n    }\r\n\r\n    // Handle multimedia message\r\n\r\n    let LASTEST_MESSAGE_CONTENT: string = `${lastestMessage.sender.name} has sent`;\r\n\r\n    // if (MessageModel.isOtherType(lastestMessage)){\r\n    //   return `${LASTEST_MESSAGE_CONTENT} a file`;\r\n    // }\r\n    \r\n    const multimediaMessage: MultimediaMessageModel = lastestMessage as MultimediaMessageModel;\r\n\r\n    return `${lastestMessage.sender.name} has sent a ${multimediaMessage.fileType}`;\r\n  }\r\n\r\n\r\n  onSearched(value: string): void {\r\n    if (value === ''){\r\n      this.filteredConversations = this.filteredConversations;\r\n      return;\r\n    }\r\n\r\n    // this.filteredConversations = this.filteredConversations.filter(conversation => \r\n    //   conversation.name.toLowerCase().includes(value.toLowerCase()));\r\n\r\n  }\r\n\r\n  onSelectChanged(event: Event) {\r\n    const selectElement = event.target as HTMLSelectElement;\r\n    const selectedValue = selectElement.value;\r\n\r\n    if (selectedValue === 'ALL') {\r\n      this.filteredConversations = this.conversations;\r\n      return;\r\n    }\r\n\r\n    if (selectedValue === 'GROUP') {\r\n      this.filteredConversations = this.conversations.filter(conversation => \r\n        ConversationModel.isGroupConversation(conversation));\r\n        return;\r\n    }\r\n\r\n    this.filteredConversations = this.conversations.filter(conversation => \r\n      !ConversationModel.isGroupConversation(conversation));\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column h-100\">\r\n    <!-- Search bar -->\r\n    <div class=\"flex-grow-0 d-flex align-items-center pe-2\">\r\n        <div class=\"m-2 flex-grow-1\">\r\n            <div class=\"input-group\">\r\n                <span class=\"input-group-text\">\r\n                    <i class=\"fas fa-search\"></i>\r\n                </span>\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" (input)=\"onSearched($event.target.value)\" >\r\n            </div>\r\n        </div>\r\n        <div class=\"flex-grow-0\">\r\n            <select class=\"form-select\" (change)=\"onSelectChanged($event)\">\r\n                <option selected value=\"ALL\">All</option>\r\n                <option value=\"GROUP\">Group</option>\r\n                <option value=\"INDIVIDUAL\">Individual</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <!-- Conversations -->\r\n    <div class=\"flex-grow-1 overflow-x-hidden overflow-y-audo\">\r\n        <div class=\"list-group\">\r\n            <a class=\"list-group-item list-group-item-action text-secondary\"\r\n            *ngFor=\"let conversation of filteredConversations\" \r\n            [conversation]=\"conversation\"\r\n            [routerLink]=\"['/conversations', conversation.id]\"\r\n            routerLinkActive=\"selected\"\r\n            >   \r\n                <div class=\"d-flex align-items-center\">\r\n                    <img class=\"rounded-circle\" [src]=\"getAvatar(conversation)\" alt=\" \" width=\"50\" height=\"50\"/>\r\n                    <div class=\"ms-3 min-w-0 w-100\">\r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                            <p class=\"my-auto text-truncate text-dark flex-grow-1\">\r\n                                {{ getName(conversation) }}\r\n                            </p>\r\n                            <small class=\"my-auto ms-3 flex-shrink-0\">{{conversation.lastestMessage?.sentAt | date: 'dd/MM/yyyy HH:mm:ss'}}</small>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between mt-2\">\r\n                            <small class=\"my-auto text-truncate flex-grow-1\">\r\n                                {{getLastestMessage(conversation)}}\r\n                            </small>\r\n                            <small *ngIf=\"conversation.hasNewMessage\" class=\"flex-shrink-0 my-auto badge bg-success rounded-pill ms-3\">\r\n                                N\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RxStompState } from '@stomp/rx-stomp';\r\nimport { Subscription } from 'rxjs';\r\nimport { StompService } from 'src/app/services/stomp.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  subscription: Subscription;\r\n\r\n  render: boolean = false;\r\n\r\n  constructor(private stompService: StompService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.stompService.connect();\r\n    this.stompService.onConnected().subscribe((state: RxStompState) => { \r\n      if (state === RxStompState.OPEN) {\r\n        this.render = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stompService.disconnect();\r\n  }\r\n}\r\n","<!-- Modal area -->\r\n<div class=\"d-flex p-0 h-100 w-100\">\r\n  <ng-container *ngIf=\"render == true\">\r\n    <app-sidebar></app-sidebar>\r\n    <div class=\"flex-grow-1\" style=\"width: 90%\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </ng-container>\r\n</div>","import { UserModel } from \"../models/user.model\";\r\n\r\n\r\nexport class SessionService {\r\n\r\n    private static CURRENT_USER_KEY: string = \"currentUser\";\r\n\r\n    static getCurrentUser(): UserModel {\r\n        return JSON.parse(sessionStorage.getItem(SessionService.CURRENT_USER_KEY));\r\n    }\r\n\r\n    static setCurrentUser(currentUser: UserModel): void {\r\n        sessionStorage.setItem(SessionService.CURRENT_USER_KEY, JSON.stringify(currentUser));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent{\n  constructor() { }\n}\n","<div class=\"flex-grow-1 text-center d-flex flex-column align-content-center \"\n        style=\"padding-top: 15%\">\n    <div class=\"h1 mb-3 text-success\">Welcome to Tchat website</div> \n    <div class=\"mt-3 small mx-auto\" style=\"width: 70%\">\n        Easy chats, stay connected. Simple, friendly app for sharing and talking. Connect effortlessly, build relationships. Your go-to for easy and meaningful conversations.\n    </div>\n    <hr class=\"mt-5\">\n    <div class=\"mt-2\">\n        <a class=\"me-5 text-success\" href=\"https://github.com/markismorehandsomethanelon\" target=\"_blank\">\n            <i class=\"fa-brands fa-lg fa-github\" aria-hidden=\"true\"></i>\n        </a>\n        <a class=\"me-5 text-success\" href=\"https://www.facebook.com/61552512084013\" target=\"_blank\">\n            <i class=\"fa-brands fa-lg fa-facebook\" aria-hidden=\"true\"></i>\n        </a>\n        <a class=\"me-5 text-success\" href=\"https://www.instagram.com/tinhlam533\" target=\"_blank\">\n            <i class=\"fa-brands fa-lg fa-instagram\" aria-hidden=\"true\"></i>\n        </a>\n    </div>\n</div>","import { SessionService } from \"../services/session.service\";\r\nimport { GroupConversationModel } from \"./group-conversation.model\";\r\nimport { MessageModel } from \"./message.model\";\r\nimport { UserModel } from \"./user.model\";\r\n\r\nexport class ConversationModel {\r\n    id: string;\r\n    lastestMessage: MessageModel;\r\n    messages: MessageModel[];\r\n    participants: UserModel[];\r\n    instanceOf: string;\r\n    \r\n    hasNewMessage: boolean = false;\r\n\r\n    constructor(){\r\n        this.lastestMessage = null;\r\n        this.messages = [];\r\n        this.participants = [];\r\n    }\r\n\r\n    static isGroupConversation(conversation: ConversationModel): boolean {\r\n        return conversation.instanceOf === 'GROUP';\r\n    }\r\n    \r\n    static getAvatarCode(conversation: ConversationModel): string {\r\n        if (this.isGroupConversation(conversation)){\r\n            return (conversation as GroupConversationModel).avatarCode;\r\n        }   \r\n        return conversation.participants.find(\r\n            participant => participant.id !== SessionService.getCurrentUser().id).avatarCode;;\r\n    }\r\n\r\n    static getName(conversation: ConversationModel): string {\r\n        if (this.isGroupConversation(conversation)){\r\n            return (conversation as GroupConversationModel).name;\r\n        }\r\n        return conversation.participants.find(\r\n            participant => participant.id !== SessionService.getCurrentUser().id).name;\r\n    }\r\n}\r\n","\r\nexport class FileUtil {\r\n    \r\n\r\n  // static getURL(fileCode: string) {\r\n  //   return `http://localhost:4200/api/v2/files/${fileCode}?${Date.now()}`;\r\n  // }\r\n\r\n  static getURL(fileCode: string) {\r\n    return `http://localhost:4200/api/v2/files/inline/${fileCode}`;\r\n  }\r\n\r\n  static getAttachment(fileCode: string) {\r\n    return `http://localhost:4200/api/v2/files/attachment/${fileCode}`;\r\n  }\r\n\r\n  //   static getBase64FromBinary(data: string, contentType: string): string {\r\n  //     return \"data:\" + contentType + \";base64,\" + data;\r\n  //   }\r\n\r\n  // static async getFileDataWithReader(file: File): Promise<FileDataModel> {\r\n  //   return new Promise<FileDataModel>((resolve, reject) => {\r\n  //     const fileData: FileDataModel = new FileDataModel();\r\n  //     const reader = new FileReader();\r\n  //     reader.onload = (e) => {\r\n  //      fileData.data = e.target.result.toString().split(',')[1];\r\n  //      fileData.contentType = file.type;\r\n  //      fileData.extension = file.name.split('.').pop();\r\n  //      resolve(fileData);\r\n  //     };\r\n  //     reader.onerror = (e) => {\r\n  //      reject(e);\r\n  //     };\r\n  //     reader.readAsDataURL(file);\r\n  //   });\r\n  //  }\r\n\r\n    static getType(file: File): string {\r\n      const fileType = file.type;\r\n\r\n      const typeMap: { [key: string]: string[] } = {\r\n        'AUDIO': ['audio/mpeg', 'audio/mp3'],\r\n        'VIDEO': ['video/mp4', 'video/mpeg'],\r\n        'IMAGE': ['image/jpeg', 'image/png', 'image/gif'],\r\n        'DOCUMENT': [\r\n          'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n          'application/msword',\r\n        ],\r\n        'PDF': [\r\n          'application/pdf',\r\n        ],\r\n        'SHEET': [\r\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        ],\r\n        'PRESENTATION': [\r\n          'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        ]\r\n      };\r\n    \r\n      for (const type in typeMap) {\r\n        if (typeMap[type].includes(fileType)) {\r\n          return type;\r\n        }\r\n      }\r\n    \r\n      return 'OTHER';\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent {\n\n  constructor(private location: Location) { }\n\n  goBack(): void {\n    this.location.back();\n  }\n}\n","<div class=\"flex-grow-1 text-center d-flex flex-column align-content-center \"\n        style=\"padding-top: 5%\">\n    <i class=\"fa fa-ghost text-danger\" style=\"font-size: 150px\" aria-hidden=\"true\"></i>\n    <div class=\"h2 mt-5 mb-3 text-danger font-weight-bold\">Page not found</div> \n\n    <div class=\"btn-group mt-5 mx-auto\" style=\"width: 20%\">\n        <button type=\"button\" class=\"btn btn-block btn-outline-danger py-3\" (click)=\"goBack()\">\n            <i class=\"fa-solid fa-arrow-left me-2\"></i>\n            Go back</button>\n    </div>\n</div>","\r\nexport class AccountModel {\r\n    username: string;\r\n    password: string;\r\n    userId: number;\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\r\nimport { ContactModel } from 'src/app/models/contact.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { ContactService } from 'src/app/services/contact.service';\r\nimport { UserModel } from 'src/app/models/user.model';\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { NgbModal, NgbModalRef  } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NGB_MODAL_BACKDROP_STATIC_OPTIONS } from 'src/app/config';\r\nimport { Router } from '@angular/router';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactsComponent implements OnInit, OnDestroy {\r\n\r\n  private contactsSubscription: Subscription;\r\n  private modalConfirmedSubscription: Subscription;\r\n  \r\n  contacts: ContactModel[] = [];\r\n  filteredContacts: ContactModel[] = [];\r\n\r\n  constructor(private ngbModal: NgbModal,\r\n    private router: Router,\r\n    private toastService: ToastService,\r\n    private cd: ChangeDetectorRef,\r\n    private contactService: ContactService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.contactsSubscription = this.contactService.contacts$.subscribe(\r\n      (contacts: ContactModel[]) => {\r\n        this.contacts = contacts;\r\n        this.filteredContacts = contacts;\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n\r\n    this.contactService.findContacts(SessionService.getCurrentUser().id).subscribe(\r\n      () => {},\r\n      (error) => {\r\n        this.toastService.show('Contacts loaded failed', false);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contactsSubscription.unsubscribe();\r\n  }\r\n\r\n  onSearched(value: string): void {\r\n    if (value === null){\r\n      this.filteredContacts = this.contacts;\r\n      return;\r\n    }\r\n\r\n    const foundContacts: ContactModel[] = this.contacts.filter(contact => {\r\n      const lowercaseValue = value.toLowerCase();\r\n      const CURRENT_USER = SessionService.getCurrentUser();\r\n      \r\n      const foundName: string = (contact.sender.id === CURRENT_USER.id) ? contact.receiver.name : contact.sender.name;\r\n\r\n      return foundName.toLowerCase().includes(lowercaseValue);\r\n    });\r\n\r\n    this.filteredContacts = foundContacts;\r\n  }\r\n\r\n  getAvatar(contact: ContactModel): string {\r\n    const CURRENT_USER: UserModel = SessionService.getCurrentUser();\r\n    const user: UserModel = (CURRENT_USER.id === contact.sender.id) ? contact.receiver : contact.sender;\r\n    return FileUtil.getURL(user.avatarCode);\r\n  }\r\n\r\n  getContactName(contact: ContactModel): string {\r\n    const CURRENT_USER: UserModel = SessionService.getCurrentUser();\r\n    return (CURRENT_USER.id === contact.sender.id) ? contact.receiver.name : contact.sender.name;\r\n  }\r\n\r\n  onClicked(contact: ContactModel): void {\r\n    this.router.navigate(['/conversations', contact.conversationId]);\r\n  }\r\n\r\n  onDeleted(event: Event, contact: ContactModel): void {\r\n    event.stopPropagation();\r\n    const modalRef: NgbModalRef = this.ngbModal.open(ConfirmModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n    this.modalConfirmedSubscription = modalRef.componentInstance.onModalConfirmed()\r\n      .subscribe(\r\n        () => {\r\n          this.contactService.deleteContact(contact.id).subscribe(\r\n            () => {\r\n              this.toastService.show('Contact deleted successfully', true);\r\n            },\r\n            (errorRes: any) => {\r\n              this.toastService.show(errorRes.error.message, false);\r\n            }\r\n          );\r\n          this.modalConfirmedSubscription.unsubscribe();\r\n          modalRef.close();\r\n        }\r\n      );\r\n  }\r\n}\r\n","\r\n<div class=\"d-flex flex-column h-100\">\r\n    <div class=\"d-flex align-items-center border-bottom ms-3 py-2 py-1\">\r\n        <i class=\"fa-regular fa-address-book fa-2x me-3\"></i>\r\n        <div class=\"text-secondary my-auto font-weight-bold h4 py-2\">Contacts</div>\r\n    </div>\r\n    <!-- Search bar -->\r\n    <div class=\"d-flex align-items-center m-2 \">\r\n        <div class=\"input-group py-2\">\r\n            <span class=\"input-group-text\">\r\n                <i class=\"fas fa-search\"></i>\r\n            </span>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" (input)=\"onSearched($event.target.value)\">\r\n        </div>\r\n    </div>\r\n    <!-- Contacts -->\r\n    <div class=\"border-bottom overflow-auto h-100 w-100 pe-3 flex-grow-1\">\r\n        <ng-container *ngFor=\"let contact of filteredContacts\">\r\n            <div class=\"list-group list-group-flush\">\r\n                <div (click)=\"onClicked(contact)\" class=\"list-group-item list-group-item-action\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div class=\"d-flex align-items-center\">\r\n                            <img class=\"rounded-circle\" [src]=\"getAvatar(contact)\" alt=\" \" width=\"50\" height=\"50\"/>\r\n                            <div class=\"ms-3 w-100\">\r\n                                <div class=\"my-auto text-truncate font-weight-bold flex-grow-1\">{{getContactName(contact)}}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-end align-items-center\">\r\n                            <button (click)=\"onDeleted($event, contact)\" type=\"button\" class=\"btn btn-white btn-lg\">\r\n                                <i class=\"fa-solid fa-x fa-lg text-danger\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NGB_MODAL_BACKDROP_STATIC_OPTIONS } from 'src/app/config';\r\n\r\nimport { FindContactModelComponent } from '../find-contact-modal/find-contact-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-contact-features',\r\n  templateUrl: './contact-features.component.html',\r\n  styleUrls: ['./contact-features.component.css']\r\n})\r\nexport class ContactFeaturesComponent {\r\n\r\n  constructor(private ngbModal: NgbModal) { }\r\n\r\n  onFindContactOpened(): void {\r\n    this.ngbModal.open(FindContactModelComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n  }\r\n}\r\n","<!-- Contact features -->\r\n<div class=\"row h-100\">\r\n    <!-- Left container -->\r\n    <div class=\"col-md-4 h-100 pe-0 border-end\">\r\n        <!-- Left header -->\r\n        <div class=\"d-flex justify-content-between align-items-center px-2 py-1 border-bottom\">\r\n            <img class=\"invisible\" height=\"50px\" />\r\n            <button (click)=\"onFindContactOpened()\" type=\"button\" class=\"btn p-3\">\r\n                <i class=\"fa-solid fa-user-plus text-secondary\"></i>\r\n            </button>\r\n        </div>\r\n        <div class=\"list-group overflow-auto\">\r\n            <a routerLink=\"/contactFeatures/contacts\"\r\n            routerLinkActive=\"selected\"\r\n            class=\"list-group-item list-group-item-action py-3\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <i class=\"fa-regular fa-address-book fa-lg me-3\"></i>\r\n                    <div>My contacts</div>\r\n                </div>\r\n            </a>\r\n            <a routerLink=\"/contactFeatures/receivedContactRequests\"\r\n            routerLinkActive=\"selected\"\r\n            class=\"list-group-item list-group-item-action py-3\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <i class=\"fa-regular fa-envelope fa-lg me-3\"></i>\r\n                    <div>Received contact requests</div>\r\n                </div>\r\n            </a>\r\n            <a routerLink=\"/contactFeatures/sentContactRequests\"\r\n            routerLinkActive=\"selected\"\r\n            class=\"list-group-item list-group-item-action py-3\">\r\n                <div class=\"d-flex align-items-center\">\r\n                    <i class=\"fa-regular fa-paper-plane fa-lg me-3\"></i>\r\n                    <div>Sent contact requests</div>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n    <!-- Right container -->\r\n    <div class=\"col-md-8 h-100 px-0 bg-white\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { UserProfileModalComponent } from '../user-profile-modal/user-profile-modal.component';\r\nimport { JoinGroupConversationModalComponent } from '../join-group-conversation-modal/join-group-conversation-modal.component';\r\nimport { GroupConversationModalComponent } from 'src/app/components/group-conversation-modal/group-conversation-modal.component';\r\n\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\n\r\nimport { UserModel } from 'src/app/models/user.model';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NGB_MODAL_BACKDROP_STATIC_OPTIONS } from 'src/app/config';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-conversations',\r\n  templateUrl: './conversations.component.html',\r\n  styleUrls: ['./conversations.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ConversationsComponent implements OnInit, OnDestroy {\r\n\r\n  currentUser: UserModel;\r\n\r\n  currentUserSupscription: Subscription;\r\n  modalConfirmSubscription: Subscription;\r\n\r\n  constructor(private ngbModal: NgbModal,\r\n      private userService: UserService,\r\n      private toastService: ToastService,\r\n      private cd: ChangeDetectorRef,\r\n      private conversationService: ConversationService) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.currentUser = SessionService.getCurrentUser();\r\n    this.currentUserSupscription = this.userService.$currentUser.subscribe(\r\n      (user: UserModel) => {\r\n      this.currentUser = user;\r\n      SessionService.setCurrentUser(this.currentUser);\r\n      this.cd.detectChanges();\r\n    });\r\n    this.conversationService.clearCurrentConversation();\r\n  }\r\n\r\n  setAvatar(): void {\r\n    this.currentUser.avatarCode = this.currentUser.avatarCode;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.currentUserSupscription.unsubscribe();\r\n  }\r\n\r\n  getAvatar(): string {\r\n    return FileUtil.getURL(this.currentUser.avatarCode);\r\n  }\r\n\r\n  onUserProfileModalOpened(): void {\r\n    const modalRef: NgbModalRef = this.ngbModal.open(UserProfileModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n    modalRef.componentInstance.user = this.currentUser;\r\n  }\r\n\r\n  onCopiedUserId(): void {\r\n    navigator.clipboard.writeText(`${SessionService.getCurrentUser().id}`);\r\n    this.toastService.show('User ID copied', true);\r\n  }\r\n\r\n  onJoinGroupConversationModalOpened(): void {\r\n    this.ngbModal.open(JoinGroupConversationModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n  }\r\n\r\n  onCreateGroupConversationModalOpened(): void {\r\n    const modalRef: NgbModalRef = this.ngbModal.open(GroupConversationModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\r\n    modalRef.componentInstance.isCreationMode = true;\r\n\r\n  }\r\n}\r\n","<!-- Conversations area -->\r\n<div class=\"row h-100\">\r\n    <!-- Left container -->\r\n    <div class=\"col-4 h-100 pe-0 border-end d-flex flex-column\">\r\n        <!-- Left header -->\r\n        <div class=\"d-flex justify-content-between align-items-center px-2 py-1 border-bottom flex-grow-0\">\r\n            <!-- Current user's avatar -->\r\n            <img (click)=\"onUserProfileModalOpened()\" class=\"rounded-circle\" \r\n            [src]=\"getAvatar()\" alt=\"Avatar\" width=\"50px\" height=\"50px\"/>\r\n            <div class=\"d-flex\">\r\n                <button (click)=\"onCreateGroupConversationModalOpened()\" type=\"button\" class=\"btn p-3\">\r\n                    <i class=\"fa-solid fa-comment-medical text-secondary\"></i>\r\n                </button>\r\n                <button (click)=\"onJoinGroupConversationModalOpened()\" type=\"button\" class=\"btn p-3\">\r\n                    <i class=\"fa-solid fa-person-circle-plus text-secondary\"></i>\r\n                </button>\r\n                <div class=\"btn-group\">\r\n                    <button type=\"button\" class=\"btn p-3\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <i class=\"fas fa-ellipsis-vertical text-secondary\"></i>\r\n                    </button>\r\n                    <div class=\"dropdown\">\r\n                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"conversationsEllipsisDropdown\">\r\n                            <button (click)=\"onCopiedUserId()\" class=\"dropdown-item\">Copy user id</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"flex-grow-1\">\r\n            <app-conversation-list></app-conversation-list>\r\n        </div>\r\n    </div>\r\n    <!-- Right container -->\r\n    <div class=\"col-8 h-100 px-3 bg-white\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\nimport { UserModel } from 'src/app/models/user.model';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-user-profile-modal',\r\n  templateUrl: './user-profile-modal.component.html',\r\n  styleUrls: ['./user-profile-modal.component.css'],\r\n})\r\nexport class UserProfileModalComponent {\r\n\r\n  @Input() user: UserModel;\r\n\r\n  @ViewChild('avatarInput') avatarInputRef!: ElementRef;\r\n  @ViewChild('avatarImage') avatarImageRef!: ElementRef;\r\n  @ViewChild('name') nameRef!: ElementRef;\r\n\r\n  newAvatarUrl: string | ArrayBuffer | null = null;\r\n  \r\n  loading: boolean = false;\r\n  errorMessage?: string;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private toastService: ToastService,\r\n    private userService: UserService){}\r\n  \r\n  getAvatar(): string {\r\n    return FileUtil.getURL(this.user.avatarCode);\r\n  }\r\n\r\n  async onFileChanged(event: any): Promise<void> {\r\n    const file: File = event.target.files[0];\r\n    if (file) {\r\n      const fileReader: FileReader = new FileReader();\r\n      fileReader.onload = (e) => {\r\n        this.newAvatarUrl = e.target?.result;\r\n      }\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  onFileChosen(): void {\r\n    this.avatarInputRef.nativeElement.click();\r\n  }\r\n\r\n  async onSaved(): Promise<void> {\r\n    this.loading = true;\r\n\r\n    const clonedUser: UserModel = new UserModel(this.user.id);\r\n    clonedUser.name = this.nameRef.nativeElement.value;\r\n    \r\n    let avatar: File = null;\r\n\r\n    if (this.avatarInputRef.nativeElement.files.length > 0) {\r\n      avatar = this.avatarInputRef.nativeElement.files[0];\r\n    }\r\n\r\n    this.userService.save(clonedUser, avatar).subscribe(\r\n      () => {\r\n        this.toastService.show('User profile updated', true);\r\n        this.onClosed();\r\n      },\r\n      (errorRes: any) => {\r\n        this.loading = false;\r\n        this.errorMessage = errorRes.error.message;\r\n      } \r\n    );\r\n  }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">User profile</h5>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" data-bs-dismiss=\"modal\" ></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"mb-2 d-flex justify-content-center position-relative\">\r\n        <div class=\"avatar-wrapper\">\r\n            <input #avatarInput (change)=\"onFileChanged($event)\" type=\"file\" class=\"d-none\" accept=\"image/*\">\r\n            <img #avatarImage [src]=\"newAvatarUrl || getAvatar()\" (click)=\"onFileChosen()\" class=\"rounded-circle border border-secondary\"\r\n                    width=\"100\" height=\"100\">\r\n            <i class=\"fa-solid fa-camera position-absolute top-50 start-50 translate-middle text-light d-none\"></i>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"mb-2\">\r\n        <label for=\"nameInput\" class=\"form-label\">Name</label>\r\n        <input #name ngbAutofocus value=\"{{user.name}}\" id=\"nameInput\" type=\"text\" class=\"form-control\" value=\"{{user.name}}\">\r\n    </div>\r\n    <div class=\"mb-2\">\r\n        <div class=\"text-danger\">{{errorMessage}}</div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\r\n    <button [disabled]=\"loading\" (click)=\"onSaved()\" type=\"button\" class=\"btn btn-success\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n        Save\r\n    </button>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'client-chat-app';\n}\n","<div class=\"bg-light container-fluid vh-100 vw-100 p-0 m-0\">\n  <router-outlet></router-outlet>\n</div>\n<app-toast></app-toast>","import { Component } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { Observable, Subject } from 'rxjs';\n\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html',\n  styleUrls: ['./confirm-modal.component.css']\n})\nexport class ConfirmModalComponent {\n\n  private modalOnConfirmedSubject: Subject<void> = new Subject<void>();\n\n  constructor(private ngbActiveModal: NgbActiveModal) {}\n\n  onModalConfirmed(): Observable<void> {\n    return this.modalOnConfirmedSubject.asObservable();\n  }\n\n  onConfirmed(): void {\n    this.modalOnConfirmedSubject.next();\n    this.onClosed();\n  }\n\n  onClosed(): void {\n    this.ngbActiveModal.close();\n  }\n}\n","<div class=\"modal-header\">\n    <h5 class=\"modal-title\">Confirm action</h5>\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\n</div>\n<div class=\"modal-body\">\n    <p>Are you sure to perform this action?</p>\n</div>\n<div class=\"modal-footer\">\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\n    <button (click)=\"onConfirmed()\" type=\"button\" class=\"btn btn-success\">\n        Confirm\n    </button>\n</div>","\r\nexport class UserModel {\r\n    id: string;\r\n    name: string;\r\n    avatarCode: string;\r\n\r\n    constructor(id: string){\r\n        this.id = id;\r\n    }\r\n}\r\n","import { MessageModel } from \"./message.model\";\r\n\r\nexport class TextMessageModel extends MessageModel {\r\n    content: string;\r\n    constructor(){\r\n        super();\r\n        this.instanceOf = \"TEXT\";\r\n    }\r\n}","import { HttpHeaders } from \"@angular/common/http\";\r\nimport {  NgbModalOptions } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n// endpoint\r\nconst API_VERSION: string = 'v2';\r\nexport const API_BASE_URL: string = `/api/${API_VERSION}`;\r\n\r\n// websocket\r\nexport const WEB_SOCKET_PUBLIC_ENDPOINT: string = `/public`;\r\nexport const WEB_SOCKET_PRIVATE_ENDPOINT: string = `/private`;\r\n\r\n// ng-bootstrap modal config \r\nexport const NGB_MODAL_BACKDROP_STATIC_OPTIONS: NgbModalOptions = {\r\n    backdrop : 'static',\r\n    keyboard : false\r\n};\r\n\r\n// http config\r\nexport const HEADER = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n});\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AccountModel } from 'src/app/models/account.model';\r\nimport { ResponseModel } from 'src/app/models/response.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SignInComponent {\r\n\r\n  account: AccountModel = new AccountModel();\r\n\r\n  loading: boolean = false;\r\n  errorMessage?: string;\r\n  \r\n  constructor(private router: Router,\r\n    private authService: AuthService) {\r\n  }\r\n\r\n  signIn(): void {\r\n    this.loading = true;\r\n    this.authService.signIn(this.account)\r\n    .subscribe(\r\n      (res: ResponseModel) => {\r\n        SessionService.setCurrentUser(res.data);\r\n        this.router.navigate(['/conversations']);\r\n      },\r\n      (error: any) => {\r\n        this.loading = false;\r\n        this.errorMessage = error.error.message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<h3 class=\"text-center font-weight-bold p-5\">SIGN IN</h3>\n<div class=\"form-group my-3\">\n    <input [(ngModel)]=\"account.username\" class=\"form-control py-2 \" type=\"text\" placeholder=\"Enter phone number\" autofocus/>\n</div>\n<div class=\"form-group my-3\">\n    <input [(ngModel)]=\"account.password\" class=\"form-control py-2\" type=\"password\" placeholder=\"Enter password\"/>\n</div>\n<div class=\"text-danger\">{{errorMessage}}</div>\n<button (click)=\"signIn()\" [disabled]=\"loading\" class=\"btn form-control btn-success py-2 mt-3\" type=\"button\">\n    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\n    Sign in\n</button>\n<div class=\"text-center p-2 mt-5\">\n    <div class=\"small text-secondary\">Don't have an account?\n        <a routerLink=\"/auth/signup\">Sign up now</a>\n    </div>\n</div>","export class SignupRequest {\r\n    username: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { ConversationsComponent } from './components/conversations/conversations.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ConversationListComponent } from './components/conversation-list/conversation-list.component';\r\nimport { ConversationDetailComponent } from './components/conversation-detail/conversation-detail.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { ScrollToBottomDirective } from './directives/scroll-to-bottom.directive';\r\nimport { ContactFeaturesComponent } from './components/contact-features/contact-features.component';\r\nimport { ContactsComponent } from './components/contacts/contacts.component';\r\nimport { ReceivedContactRequestComponent } from './components/received-contact-requests/received-contact-requests.component';\r\nimport { SentContactRequestComponent } from './components/sent-contact-requests/sent-contact-requests.component';\r\nimport { AuthComponent } from './components/auth/auth.component';\r\nimport { SignInComponent } from './components/signin/signin.component';\r\nimport { SignUpComponent } from './components/signup/signup.component';\r\nimport { MainComponent } from './components/main/main.component';\r\nimport { WelcomeComponent } from './components/welcome/welcome.component';\r\nimport { UserProfileModalComponent } from './components/user-profile-modal/user-profile-modal.component';\r\nimport { ChangePasswordModalComponent } from './components/change-password-modal/change-password-modal.component';\r\nimport { GroupConversationModalComponent } from './components/group-conversation-modal/group-conversation-modal.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmModalComponent } from './components/confirm-modal/confirm-modal.component';\r\nimport { JoinGroupConversationModalComponent } from './components/join-group-conversation-modal/join-group-conversation-modal.component';\r\nimport { FindContactModelComponent } from './components/find-contact-modal/find-contact-modal.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ToastComponent } from './components/toast/toast.component';\r\nimport { RxStompService } from '@stomp/ng2-stompjs';\r\nimport { StompService } from './services/stomp.service';\r\nimport { ViewModalComponent } from './components/view-modal/view-modal.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MessageComponent } from './components/message/message.component';\r\nimport { VoiceRecorderModalComponent } from './components/voice-recorder-modal/voice-recorder-modal.component';\r\nimport { DeleteAccountModalComponent } from './components/delete-account-modal/delete-account-modal.component';\r\nimport { NgbToastModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SidebarComponent,\r\n    ConversationsComponent,\r\n    ConversationListComponent,\r\n    ConversationDetailComponent,\r\n    PageNotFoundComponent,\r\n    ScrollToBottomDirective,\r\n    ContactFeaturesComponent,\r\n    ContactsComponent,\r\n    ReceivedContactRequestComponent,\r\n    SentContactRequestComponent,\r\n    AuthComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    MainComponent,\r\n    WelcomeComponent,\r\n    UserProfileModalComponent,\r\n    ChangePasswordModalComponent,\r\n    GroupConversationModalComponent,\r\n    ConfirmModalComponent,\r\n    JoinGroupConversationModalComponent,\r\n    FindContactModelComponent,\r\n    ToastComponent,\r\n    ViewModalComponent,\r\n    MessageComponent,\r\n    VoiceRecorderModalComponent,\r\n    DeleteAccountModalComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule,\r\n    NgbToastModule,\r\n    FormsModule,\r\n    NgxExtendedPdfViewerModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [\r\n    RxStompService,\r\n    StompService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Subject } from \"rxjs\";\r\n\r\nexport class ObservableUtil {\r\n    static notify(subject: Subject<any>, data: any): void {\r\n        let nextedData: any;\r\n        if (data instanceof Map) {\r\n            nextedData = Array.from(data.values());\r\n        }else {\r\n            nextedData = data;\r\n        }\r\n        subject.next(nextedData);\r\n    }\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport { MultimediaMessageModel } from 'src/app/models/multimedia-message.model';\r\nimport { ResponseModel } from 'src/app/models/response.model';\r\n\r\nimport { UserModel } from 'src/app/models/user.model';\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { VoiceRecorderService } from 'src/app/services/voice-recorder.service';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-voice-recorder-modal',\r\n  templateUrl: './voice-recorder-modal.component.html',\r\n  styleUrls: ['./voice-recorder-modal.component.css']\r\n})\r\nexport class VoiceRecorderModalComponent{\r\n\r\n  isRecording: boolean = false;\r\n\r\n  @ViewChild('audioPlayer') audioPlayer: ElementRef;\r\n\r\n  audioBob: any;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private voiceRecorderService: VoiceRecorderService,\r\n    private toastService: ToastService,\r\n    private conversationService: ConversationService) { }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n\r\n  onToggled(): void {\r\n    if (!this.isRecording) {\r\n      this.onStarted();\r\n    } else {\r\n      this.onStopped();\r\n    }\r\n  }\r\n\r\n  onStarted(): void {\r\n    this.voiceRecorderService.startRecording();\r\n    this.isRecording = true;\r\n  }\r\n\r\n\r\n  async onStopped() {\r\n    this.audioBob = await this.voiceRecorderService.stopRecording();\r\n    this.isRecording = false;\r\n    this.audioPlayer.nativeElement.src = URL.createObjectURL(this.audioBob);\r\n  }\r\n\r\n  async onSent(): Promise<void> {\r\n    \r\n    const message: MultimediaMessageModel = new MultimediaMessageModel();\r\n    \r\n    message.sender = new UserModel(SessionService.getCurrentUser().id);\r\n    message.sentAt = new Date().toISOString();\r\n    message.conversationId = this.conversationService.currentConversation.id;\r\n    message.fileType = 'AUDIO';\r\n\r\n    const file: File = new File([this.audioBob], 'audio.mp3', { type: 'audio/mp3' });\r\n \r\n    this.conversationService.sendMultimediaMessage(message, file).subscribe(\r\n      (res: ResponseModel) => {\r\n        this.ngbActiveModal.close(res);\r\n        this.onClosed();\r\n      },(error: any) => this.toastService.show(error.error.message, false)\r\n    );\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">Voice recorder</h5>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" data-bs-dismiss=\"modal\" ></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"d-flex flex-column justify-content-center align-items-center\">\r\n        <i class=\"fa fa-microphone fa-8x text-secondary\" (click)=\"onToggled()\" [ngClass]=\"{ 'recording': isRecording }\"></i>\r\n        <audio controls autoplay class=\"mt-3\" #audioPlayer></audio>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button (click)=\"onSent()\" type=\"button\" class=\"btn btn-success\">Send</button>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { SessionService } from 'src/app/services/session.service';\r\nimport { ContactService } from 'src/app/services/contact.service';\r\n\r\nimport { ContactModel } from 'src/app/models/contact.model';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastService } from '../toast/toast.service';\r\n\r\n@Component({\r\n  selector: 'app-sent-contact-requests',\r\n  templateUrl: './sent-contact-requests.component.html',\r\n  styleUrls: ['./sent-contact-requests.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SentContactRequestComponent implements OnInit, OnDestroy {\r\n\r\n  private sentContactRequestsSubscription: Subscription;\r\n  private modalConfirmedSubscription: Subscription;\r\n\r\n  sentContactRequests: ContactModel[] = [];\r\n  filteredSentContactRequests: ContactModel[] = [];\r\n\r\n  constructor(private ngbModal: NgbModal,\r\n    private toastService: ToastService,\r\n    private cd: ChangeDetectorRef,\r\n    private contactService: ContactService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.sentContactRequestsSubscription = this.contactService.sentContactRequests$.subscribe(\r\n      (sentContactRequests: ContactModel[]) => {\r\n        this.sentContactRequests = sentContactRequests;\r\n        this.filteredSentContactRequests = this.sentContactRequests;\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n    this.contactService.findSentContactRequests(SessionService.getCurrentUser().id).subscribe(\r\n      () => {},\r\n      (error) => this.toastService.show('Sent contacts loaded failed', false)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sentContactRequestsSubscription.unsubscribe();\r\n  }\r\n\r\n  getAvatar(contact: ContactModel): string {\r\n    return FileUtil.getURL(contact.receiver.avatarCode);\r\n  }\r\n\r\n  onSearched(value?: string): void {\r\n    if (value === null){\r\n      this.filteredSentContactRequests = this.sentContactRequests;\r\n      return;\r\n    }\r\n\r\n    const foundSentContactRequests: ContactModel[] = this.sentContactRequests.filter(contact => {\r\n      return contact.receiver.name.toLowerCase().includes(value.toLowerCase());\r\n    });\r\n\r\n    this.filteredSentContactRequests = foundSentContactRequests;\r\n  }\r\n\r\n  onDeleted(sentContactRequest: ContactModel): void {\r\n    const modalRef: NgbModalRef = this.ngbModal.open(ConfirmModalComponent);\r\n    this.modalConfirmedSubscription = modalRef.componentInstance.onModalConfirmed()\r\n      .subscribe(\r\n        () => {\r\n          this.contactService.deleteSentRequest(sentContactRequest.id).subscribe(\r\n            () => {\r\n              this.toastService.show('Contact request deleted', true);\r\n            },\r\n            (errorRes: any) => {\r\n              this.toastService.show(errorRes.error.message, false);\r\n            }\r\n          );\r\n          this.modalConfirmedSubscription.unsubscribe();\r\n          modalRef.close();  \r\n        }\r\n      );\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column h-100\">\r\n    <div class=\"d-flex align-items-center border-bottom ms-3 py-2 py-1\">\r\n        <i class=\"fa-regular fa-paper-plane fa-2x me-3\"></i>\r\n        <div class=\"text-secondary my-auto font-weight-bold h4 py-2\">Sent contact requests</div>\r\n    </div>\r\n    <!-- Search bar -->\r\n    <div class=\"d-flex align-items-center m-2 \">\r\n        <div class=\"input-group py-2\">\r\n            <span class=\"input-group-text\">\r\n                <i class=\"fas fa-search\"></i>\r\n            </span>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" (input)=\"onSearched($event.target.value)\">\r\n        </div>\r\n    </div>\r\n    <!-- Contacts -->\r\n    <div class=\"border-bottom overflow-auto h-100 w-100 pe-3 flex-grow-1\">\r\n        <div class=\"list-group list-group-flush\">\r\n            <div *ngFor=\"let sentContactRequest of filteredSentContactRequests\" class=\"list-group-item list-group-item-action\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                        <img class=\"rounded-circle\" [src]=\"getAvatar(sentContactRequest)\" alt=\" \" width=\"50\" height=\"50\"/>\r\n                        <div class=\"ms-3 w-100\">\r\n                            <div class=\"my-auto text-truncate font-weight-bold flex-grow-1\">{{sentContactRequest.receiver.name}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"d-flex justify-content-end align-items-center\">\r\n                        <button (click)=\"onDeleted(sentContactRequest)\" type=\"button\" class=\"btn btn-white\">\r\n                            <i class=\"fa-solid fa-x fa-lg text-danger\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountModel } from '../models/account.model';\r\nimport { API_BASE_URL } from '../config';\r\nimport { ChangePasswordRequest } from '../requests/change-password.request';\r\nimport { ResponseModel } from '../models/response.model';\r\nimport { SignupRequest } from '../requests/signup.request';\r\nimport { DeleteAccountRequest } from '../requests/delete-account.request';\r\nimport { SessionService } from './session.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    private SIGN_IN_URL = `${API_BASE_URL}/signin`;\r\n    private SIGN_UP_URL = `${API_BASE_URL}/signup`;\r\n    private ACCOUNT_BASE_URL = `${API_BASE_URL}/accounts`;\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    signIn(account: AccountModel): Observable<ResponseModel> {\r\n        return this.http.post<ResponseModel>(this.SIGN_IN_URL, account);\r\n    }\r\n\r\n    signUp(request: SignupRequest): Observable<ResponseModel> {\r\n        return this.http.post<ResponseModel>(this.SIGN_UP_URL, request);\r\n    }\r\n\r\n    changePassword(request: ChangePasswordRequest): Observable<ResponseModel> {\r\n        return this.http.patch<ResponseModel>(this.ACCOUNT_BASE_URL, request);\r\n    }\r\n\r\n    signOut(): void {\r\n        SessionService.setCurrentUser(null);\r\n    }\r\n\r\n    deleteAccount(deleteAccountRequest: DeleteAccountRequest): Observable<ResponseModel> {\r\n        const options = {\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: deleteAccountRequest\r\n        };\r\n        return this.http.delete<ResponseModel>(this.ACCOUNT_BASE_URL, options);\r\n    }\r\n}\r\n","import { Directive, ElementRef, AfterViewChecked  } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[scrollToBottom]'\r\n})\r\nexport class ScrollToBottomDirective implements AfterViewChecked  {\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngAfterViewChecked() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    // const nativeElement = this.el.nativeElement;\r\n    // const isAtBottom = nativeElement.scrollHeight - nativeElement.scrollTop === nativeElement.clientHeight;\r\n    // console.log(nativeElement.scrollHeight);\r\n    // console.log(isAtBottom);\r\n    // if (isAtBottom) {\r\n    //   this.el.nativeElement.scrollTop = this.el.nativeElement.scrollHeight;\r\n    // }\r\n  }\r\n}","\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { API_BASE_URL } from '../config';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { UserModel } from '../models/user.model';\r\nimport { ResponseModel } from '../models/response.model';\r\nimport { SessionService } from './session.service';\r\nimport { FileFetcherService } from './file-fetcher.service';\r\nimport { ObservableUtil } from '../utils/observable.util';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private USER_BASE_URL = `${API_BASE_URL}/users`;\r\n\r\n  private currentUserSubject: Subject<UserModel> = new Subject<UserModel>();\r\n  $currentUser: Observable<UserModel> = this.currentUserSubject.asObservable();\r\n\r\n  currentUser?: UserModel = SessionService.getCurrentUser();\r\n\r\n  constructor(private http: HttpClient,\r\n    private fileFetcherService: FileFetcherService) {}\r\n\r\n  findOne(id: string): Observable<ResponseModel> {\r\n    return this.http.get<ResponseModel>(`${this.USER_BASE_URL}/${id}`).pipe(\r\n      tap((res: ResponseModel) => {\r\n        this.currentUser = res.data;\r\n        ObservableUtil.notify(this.currentUserSubject, this.currentUser);\r\n      })\r\n    );\r\n  }\r\n\r\n  save(user: UserModel, avatar: File): Observable<ResponseModel> {\r\n    const formData: FormData = new FormData();\r\n    \r\n    formData.append('user', new Blob([JSON\r\n      .stringify(user)], {\r\n      type: 'application/json'\r\n    }));\r\n    \r\n\r\n    if (avatar) {\r\n      formData.append('avatar', avatar);  \r\n    }\r\n\r\n    return this.http.patch(this.USER_BASE_URL, formData).pipe(\r\n      tap((res: ResponseModel) => {\r\n        console.log(res);\r\n        this.currentUser.name = user.name;\r\n        this.currentUser.avatarCode = res.data;\r\n        console.log(this.currentUser);\r\n        ObservableUtil.notify(this.currentUserSubject, this.currentUser);\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n\n  constructor() { }\n}\n","<div class=\"row justify-content-center align-items-center h-100\">\n    <div class=\"col-md-4 shadow bg-white py-3 px-5\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { API_BASE_URL } from \"../config\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ResponseModel } from \"../models/response.model\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FileFetcherService {\r\n\r\n    private FILE_INLINE_BASE_URL: string = `${API_BASE_URL}/files/inline`;\r\n    private FILE_ATTACHMENT_BASE_URL: string = `${API_BASE_URL}/files/attachment`;\r\n    \r\n\r\n    constructor(private http: HttpClient) { }\r\n    \r\n    fetchAsBytes(fileCode: string): Observable<ArrayBuffer> {\r\n        const url: string = `${this.FILE_ATTACHMENT_BASE_URL}/${fileCode}`;\r\n        return this.http.get(url, {responseType: 'arraybuffer'});\r\n    }\r\n}","import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ConversationService } from 'src/app/services/conversation.service';\r\nimport { SessionService } from 'src/app/services/session.service';\r\n\r\nimport { UserModel } from 'src/app/models/user.model';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\nimport { GroupConversationModel } from 'src/app/models/group-conversation.model';\r\nimport { ToastService } from '../toast/toast.service';\r\nimport { ConversationModel } from 'src/app/models/conversation.model';\r\n\r\n@Component({\r\n  selector: 'app-group-conversation-modal',\r\n  templateUrl: './group-conversation-modal.component.html',\r\n  styleUrls: ['./group-conversation-modal.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GroupConversationModalComponent implements OnInit, AfterViewInit  {\r\n\r\n  @Input() isCreationMode: boolean;\r\n\r\n  conversation?: GroupConversationModel = new GroupConversationModel();\r\n\r\n  @ViewChild('avatarInput') avatarInput!: ElementRef;\r\n  @ViewChild('avatarImage') avatarImage!: ElementRef;\r\n  @ViewChild('nameInput') nameInput!: ElementRef;\r\n\r\n  loading = false;\r\n  title: string;\r\n  errorMessage?: string;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private conversationService: ConversationService,\r\n    private cd: ChangeDetectorRef,\r\n    private toastService: ToastService){\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.isCreationMode) {\r\n      this.title = \"Update group conversation\";\r\n      this.conversation = this.conversationService.currentConversation as GroupConversationModel;\r\n      this.avatarImage.nativeElement.src = FileUtil.getURL(this.conversation.avatarCode);\r\n      this.cd.detectChanges();\r\n      return;\r\n    }\r\n\r\n    this.title = \"Create group conversation\";\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  getName(): string {\r\n    return ConversationModel.getName(this.conversation);\r\n  }\r\n\r\n  async onFileChanged(event: any): Promise<void> {\r\n    const file: File = event.target.files[0];\r\n    if (file) {\r\n      const fileReader: FileReader = new FileReader();\r\n      fileReader.onload = (e) => {\r\n        this.avatarImage.nativeElement.src = e.target?.result as string;\r\n        this.cd.detectChanges();\r\n      }\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  onFileChosen(): void {\r\n    this.avatarInput.nativeElement.click();\r\n  }\r\n\r\n  async onSaved():Promise<void> {\r\n    this.loading = true;\r\n\r\n    const clonedConversation: GroupConversationModel = new GroupConversationModel();\r\n\r\n    clonedConversation.name = this.nameInput.nativeElement.value;\r\n\r\n    let avatar: File;\r\n\r\n    if (this.avatarInput.nativeElement.files.length > 0){\r\n      avatar = this.avatarInput.nativeElement.files[0];\r\n    }\r\n\r\n    if (this.isCreationMode) {\r\n      this.onCreated(clonedConversation, avatar)\r\n      return;\r\n    }\r\n    \r\n    clonedConversation.id = this.conversation.id;\r\n    this.onUpdated(clonedConversation, avatar);\r\n    \r\n  }\r\n\r\n  onCreated(clonedConversation: GroupConversationModel, avatar: File): void {\r\n    const CURRENT_USER: UserModel = SessionService.getCurrentUser();\r\n    clonedConversation.ownerId = CURRENT_USER.id;\r\n\r\n    this.conversationService.createGroupConversation(clonedConversation, avatar).subscribe(\r\n      () => {\r\n        this.toastService.show('Group conversation created', true);\r\n        this.onClosed();\r\n      },\r\n      (errorResponse: any) => {\r\n        this.loading = false;\r\n        this.errorMessage = errorResponse.error.message;\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  onUpdated(clonedConversation: GroupConversationModel, file: File): void {\r\n    this.conversationService.updateGroupConversation(clonedConversation, file).subscribe(\r\n      () => {\r\n        this.toastService.show('Group conversation updated', true);\r\n        this.onClosed();\r\n      },\r\n      (errorResponse: any) => {\r\n        this.loading = false;\r\n        this.errorMessage = errorResponse.error.message;\r\n        this.cd.detectChanges();\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n}","<div class=\"modal-header\">\r\n    <h5 class=\"modal-title\">{{title}}</h5>\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" data-bs-dismiss=\"modal\" ></button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <div class=\"position-relative d-flex justify-content-center\">\r\n        <div class=\"avatar-wrapper\">\r\n            <input #avatarInput (change)=\"onFileChanged($event)\" type=\"file\" class=\"d-none\" accept=\"image/*\">\r\n            <img #avatarImage (click)=\"onFileChosen()\" class=\"rounded-circle border border-secondary\"\r\n                    width=\"100\" height=\"100\">\r\n            <i class=\"fa-solid fa-camera position-absolute top-50 start-50 translate-middle text-light d-none\"></i>\r\n        </div>\r\n    </div>\r\n    <div class=\"mb-2\">\r\n        <label for=\"nameInput\" class=\"form-label\">Name</label>\r\n        <input #nameInput ngbAutofocus value=\"{{getName()}}\" id=\"nameInput\" type=\"text\" class=\"form-control\" placeholder=\"Type a conversation name\">\r\n    </div>\r\n    <div class=\"mb-2\">\r\n        <div class=\"text-danger\">{{errorMessage}}</div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\r\n    <button (click)=\"onSaved()\" [disabled]=\"loading\" type=\"button\" class=\"btn btn-success\">\r\n        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n        Save\r\n    </button>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MultimediaMessageModel } from 'src/app/models/multimedia-message.model';\r\nimport { FileFetcherService } from 'src/app/services/file-fetcher.service';\r\n\r\nimport { FileUtil } from 'src/app/utils/file-util';\r\n\r\n@Component({\r\n  selector: 'app-view-modal',\r\n  templateUrl: './view-modal.component.html',\r\n  styleUrls: ['./view-modal.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ViewModalComponent implements OnInit {\r\n\r\n  errorMessage?: string;\r\n  fileContent?: string;\r\n\r\n  @Input() message?: MultimediaMessageModel;\r\n\r\n  constructor(private ngbActiveModal: NgbActiveModal,\r\n    private cd: ChangeDetectorRef,\r\n    private fileFetcherService: FileFetcherService){\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.message.fileType !== 'OTHER') {\r\n      return;  \r\n    }\r\n    this.fileFetcherService.fetchAsBytes(this.message.fileCode)\r\n      .subscribe((data: ArrayBuffer) => {\r\n        const decoder = new TextDecoder('utf-8');\r\n        this.fileContent = decoder.decode(data);\r\n        this.cd.detectChanges();\r\n    });\r\n  }\r\n\r\n  onClosed(): void {\r\n    this.ngbActiveModal.close();\r\n  }\r\n\r\n  getData(): string {\r\n    return FileUtil.getAttachment(this.message.fileCode);\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex flex-column vh-100\">\n    <div class=\"modal-header flex-grow-0\">\n        <h5 class=\"modal-title\">{{message.fileName}}</h5>\n        <button (click)=\"onClosed()\" type=\"button\" class=\"btn-close\" aria-label=\"Close\" data-bs-dismiss=\"modal\" ></button>\n    </div>\n    <div class=\"modal-body flex-grow-1\">\n        <ng-container *ngIf=\"message.fileType === 'OTHER'\">\n            <p>{{fileContent}}</p>\n        </ng-container>\n        <ng-container *ngIf=\"message.fileType === 'PDF'\">\n            <ngx-extended-pdf-viewer [src]=\"getData()\"></ngx-extended-pdf-viewer>\n        </ng-container>\n    </div>\n    <div class=\"modal-footer flex-grow-0\">\n        <button (click)=\"onClosed()\" type=\"button\" class=\"btn btn-secondary\">Close</button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { InjectableRxStompConfig, RxStompService, StompHeaders } from '@stomp/ng2-stompjs';\r\nimport { RxStompState } from '@stomp/rx-stomp';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst myRxStompConfig: InjectableRxStompConfig = {\r\n  brokerURL: 'ws://localhost:8080/ws',\r\n\r\n  connectHeaders: {\r\n  },\r\n\r\n  splitLargeFrames: true,\r\n  heartbeatIncoming: 0, // Typical value 0 - disabled\r\n  heartbeatOutgoing: 20000, // Typical value 20000 - every 20 seconds\r\n\r\n  reconnectDelay: 5000,\r\n  debug: (msg: string): void => {\r\n    console.log(new Date(), msg);\r\n  }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StompService {\r\n\r\n  private stompSubscriptions: Map<string, Subscription>;\r\n\r\n  constructor(private rxStompService: RxStompService) {\r\n  }\r\n\r\n  connect(): void {\r\n    this.rxStompService.configure(myRxStompConfig);\r\n    this.rxStompService.activate();\r\n    this.stompSubscriptions = new Map();\r\n  }\r\n\r\n  onConnected(): Observable<RxStompState> {\r\n    return this.rxStompService.connected$;\r\n  }\r\n\r\n  disconnect(): void {\r\n    this.rxStompService.deactivate();\r\n  }\r\n\r\n  watch(destination: string, callback: (res: any) => void): void {\r\n    if (!this.stompSubscriptions.has(destination)) {\r\n      const subscription: Subscription = this.rxStompService.watch(destination).subscribe(\r\n        (res: any) => {\r\n          callback(JSON.parse(res.body));\r\n        }\r\n      );\r\n      this.stompSubscriptions.set(destination, subscription);\r\n    } \r\n  }\r\n\r\n  unwatch(destination: string, callback: () => void): void {\r\n    if (this.stompSubscriptions.has(destination)) {\r\n      const subscription = this.stompSubscriptions.get(destination);\r\n      if (subscription) {\r\n          subscription.unsubscribe();\r\n          this.stompSubscriptions.delete(destination);\r\n          callback();\r\n      }\r\n    } \r\n  }\r\n\r\n  publish(topic: string, body?: any): void {\r\n    const message = { destination: topic };\r\n    if (body !== undefined) {\r\n      message['body'] = JSON.stringify(body);\r\n    }\r\n    this.rxStompService.publish(message);\r\n  }\r\n}","import { HttpClient, HttpEvent, HttpEventType, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter, map, tap } from 'rxjs/operators';\r\n\r\nimport { API_BASE_URL, WEB_SOCKET_PRIVATE_ENDPOINT, WEB_SOCKET_PUBLIC_ENDPOINT, HEADER } \r\nfrom '../config';\r\n\r\nimport { SessionService } from './session.service';\r\nimport { StompService } from './stomp.service';\r\n\r\nimport { ConversationModel } from '../models/conversation.model';\r\nimport { MessageModel } from '../models/message.model';\r\nimport { MessageReadStatusModel } from '../models/message-read-status.model';\r\nimport { ResponseModel } from '../models/response.model';\r\nimport { ObservableUtil } from '../utils/observable.util';\r\nimport { ToastService } from '../components/toast/toast.service';\r\nimport { GroupConversationModel } from '../models/group-conversation.model';\r\nimport { FileFetcherService } from './file-fetcher.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversationService {\r\n\r\n    private CONVERSATIONS_BASE_URL: string = `${API_BASE_URL}/conversations`;\r\n    private GROUP_CONVERSATION_BASE_URL = `${API_BASE_URL}/groupConversations`;\r\n    private MESSAGE_READ_STATUS_BASE_URL = `${API_BASE_URL}/messageNotifications`;\r\n    private MULTIMEDIA_MESSAGE_BASE_URL: string = `${API_BASE_URL}/multimediaMessages`;\r\n    \r\n    private conversationsSubject: Subject<ConversationModel[]> = \r\n        new Subject<ConversationModel[]>();\r\n    conversations$ = this.conversationsSubject.asObservable();\r\n\r\n    private currentConversationSubject: Subject<ConversationModel> = \r\n        new Subject<ConversationModel>();\r\n    curentConversation$ = this.currentConversationSubject.asObservable();\r\n\r\n    private messageReadStatusesSubject: Subject<Map<string, MessageReadStatusModel>> = \r\n        new Subject<Map<string, MessageReadStatusModel>>();\r\n    messageReadStatuses$ = this.messageReadStatusesSubject.asObservable();\r\n\r\n    private newMessageSubject: Subject<void> = new Subject<void>();\r\n    newMessage$ = this.newMessageSubject.asObservable();\r\n\r\n    private fileUploadedSubject: Subject<number> = new Subject<number>();\r\n    fileUploaded$ = this.fileUploadedSubject.asObservable();\r\n\r\n    conversations: ConversationModel[] = [];\r\n    currentConversation?: ConversationModel;\r\n    messageReadStatuses: Map<string, MessageReadStatusModel> = new Map();\r\n    \r\n    constructor(private http: HttpClient, \r\n        private toastService: ToastService,\r\n        private fileFetcherService: FileFetcherService,\r\n        private stompService: StompService) {}\r\n\r\n    clearCurrentConversation(): void {\r\n        this.currentConversation = undefined;\r\n        this.currentConversationSubject.next(this.currentConversation);\r\n    }\r\n\r\n    findAll(participantId: string): Observable<ResponseModel>{\r\n        const url: string = `${this.CONVERSATIONS_BASE_URL}/participants/${participantId}`;\r\n\r\n        return this.http.get<ResponseModel>(url).pipe(\r\n            tap((res: ResponseModel) => {\r\n                this.conversations = res.data;\r\n                this.conversations.forEach(con => {\r\n                    this.subsribeConversationChannel(con.id);\r\n                });\r\n                ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n            })\r\n        );\r\n    }\r\n\r\n    findOne(conversationId: string, participantId: string): Observable<ResponseModel> {\r\n        const url = `${this.CONVERSATIONS_BASE_URL}/${conversationId}/participants/${participantId}`;\r\n\r\n        return this.http.get<ResponseModel>(url).pipe(\r\n            tap((res: ResponseModel) => {\r\n                this.currentConversation = res.data;\r\n                this.subsribeConversationChannel(this.currentConversation.id);\r\n                ObservableUtil.notify(this.currentConversationSubject, this.currentConversation);\r\n            })\r\n        );\r\n    }\r\n    \r\n    findUnreadMessages(conversationId: string): Observable<ResponseModel> {\r\n        const url = `${this.MESSAGE_READ_STATUS_BASE_URL}/conversations/${conversationId}/unreadMessages/user/${SessionService.getCurrentUser().id}`;\r\n\r\n        return this.http.get<ResponseModel>(url).pipe(\r\n            tap((res: ResponseModel) => {\r\n                const messageReadStatuses: MessageReadStatusModel[] = res.data;\r\n                this.messageReadStatuses = new Map(messageReadStatuses.map(status => [status.messageId, status]));\r\n                this.messageReadStatusesSubject.next(this.messageReadStatuses);\r\n            })\r\n        );\r\n    }\r\n\r\n    createGroupConversation(conversation: GroupConversationModel, avatar: File): Observable<ResponseModel>{\r\n\r\n        const formData = new FormData();\r\n        formData.append('conversation', \r\n            new Blob([JSON.stringify(conversation)], {type: 'application/json'}));\r\n\r\n        if (avatar) {\r\n            formData.append('avatar', avatar);\r\n        }\r\n\r\n        return this.http.post<ResponseModel>(this.GROUP_CONVERSATION_BASE_URL, formData).pipe(\r\n            tap((res: ResponseModel) => {\r\n                this.conversations.push(res.data);\r\n                this.subsribeConversationChannel(res.data.id);\r\n                ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n            })\r\n        );\r\n    }\r\n \r\n     updateGroupConversation(conversation: GroupConversationModel, avatar: File): Observable<ResponseModel> {\r\n\r\n        const formData = new FormData();\r\n    \r\n        if (avatar) {\r\n            formData.append('avatar', avatar);\r\n        }\r\n        formData.append('conversation', \r\n            new Blob([JSON.stringify(conversation)], {type: 'application/json'}));\r\n            \r\n\r\n        return this.http.patch<ResponseModel>(this.GROUP_CONVERSATION_BASE_URL, formData).pipe(\r\n             tap((res: ResponseModel) => {\r\n                const foundConversationIndex: number = this.conversations.findIndex(\r\n                    con => con.id === conversation.id);\r\n\r\n                const foundConversation: GroupConversationModel = \r\n                    this.conversations[foundConversationIndex] as GroupConversationModel;\r\n                \r\n                foundConversation.name = conversation.name;\r\n                foundConversation.avatarCode = res.data;\r\n\r\n                this.conversations[foundConversationIndex] = foundConversation;\r\n\r\n                (this.currentConversation as GroupConversationModel).name = conversation.name;\r\n                (this.currentConversation as GroupConversationModel).avatarCode = res.data;\r\n\r\n                ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n                ObservableUtil.notify(this.currentConversationSubject, this.currentConversation);\r\n             })\r\n         );\r\n     }\r\n \r\n     joinGroupConversation(conversationId: string, joinerId: string): Observable<ResponseModel> {\r\n         const URL = `${this.GROUP_CONVERSATION_BASE_URL}/${conversationId}/participants/${joinerId}`;\r\n\r\n         return this.http.post<ResponseModel>(URL, null).pipe(\r\n             tap((res: ResponseModel) => {\r\n                const joinedConversation: GroupConversationModel = res.data;\r\n\r\n                this.conversations.push(joinedConversation);\r\n\r\n                this.subsribeConversationChannel(joinedConversation.id);\r\n                ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n                    \r\n             })\r\n         );\r\n     }\r\n \r\n     leaveGroupConversation(conversationId: string, leaverId: string): Observable<ResponseModel> {\r\n        const URL = `${this.GROUP_CONVERSATION_BASE_URL}/${conversationId}/participants/${leaverId}`;\r\n        return this.http.delete<ResponseModel>(URL).pipe(\r\n            tap(() => {\r\n                this.conversations.splice(this.conversations.findIndex(con => con.id === conversationId), 1);\r\n                this.currentConversation = undefined;\r\n\r\n                this.unsubscribeConversationChannel(conversationId);\r\n\r\n                ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n                ObservableUtil.notify(this.currentConversationSubject, this.currentConversation);\r\n            })\r\n        );\r\n     }\r\n\r\n     markConversationAsRead(conversationId: string): void {\r\n        const topic: string = `/app/user/${SessionService.getCurrentUser().id}/conversationReadStatus/${conversationId}`;\r\n        this.stompService.publish(topic);    \r\n    }\r\n\r\n    subsribeConversationChannel(conversationId: string): void {\r\n        const url: string = `${WEB_SOCKET_PUBLIC_ENDPOINT}/conversations/${conversationId}/messages`;\r\n        this.stompService.watch(url, (res: ResponseModel) => {\r\n            \r\n            if (!res.success){\r\n                this.toastService.show(res.message, false);\r\n                return\r\n            }\r\n\r\n            const receivedMessage: MessageModel = res.data;\r\n\r\n            if (receivedMessage.sender.id === SessionService.getCurrentUser().id) {\r\n                this.currentConversation.messages[0] = receivedMessage;\r\n                this.currentConversation.lastestMessage = receivedMessage;\r\n                const foundConversationIndex = this.conversations.indexOf(this.conversations.find(con => con.id === receivedMessage.conversationId));\r\n                const foundConversation: ConversationModel = this.conversations[foundConversationIndex];\r\n                this.conversations.splice(foundConversationIndex, 1);\r\n                this.conversations.unshift(foundConversation);\r\n                ObservableUtil.notify(this.currentConversationSubject, this.currentConversation);\r\n                ObservableUtil.notify(this.fileUploadedSubject, 100);\r\n                return;\r\n            }\r\n\r\n            const foundConversationIndex = this.conversations.indexOf(this.conversations.find(con => con.id === receivedMessage.conversationId));\r\n            const foundConversation: ConversationModel = this.conversations[foundConversationIndex];\r\n            \r\n            if (!foundConversation.messages) {\r\n                foundConversation.messages = [];\r\n            }\r\n\r\n            foundConversation.messages.unshift(receivedMessage);\r\n            foundConversation.lastestMessage = receivedMessage;\r\n\r\n            this.conversations.splice(foundConversationIndex, 1);\r\n            this.conversations.unshift(foundConversation);\r\n\r\n            // If the message is sent to the current conversation \r\n            if (this.currentConversation && this.currentConversation.id === foundConversation.id) {\r\n                \r\n                this.currentConversation.messages.unshift(receivedMessage);\r\n                this.currentConversation.lastestMessage = receivedMessage;\r\n\r\n                this.markConversationAsRead(receivedMessage.conversationId); \r\n            }else {\r\n                this.conversations[0].hasNewMessage = true;\r\n                ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n            }\r\n        });\r\n    }\r\n\r\n    sendTextMessage(message: MessageModel): void {\r\n        this.currentConversation.messages.unshift(message);\r\n        this.currentConversation.lastestMessage = message;\r\n        const destination: string = `/app/conversations/${message.conversationId}/textMessages`;\r\n        this.stompService.publish(destination, message);\r\n    }\r\n  \r\n\r\n    sendMultimediaMessage(message: MessageModel, file: File): Observable<ResponseModel> {\r\n\r\n        if (file.size > 1024 * 1024 * 300) {\r\n            this.toastService.show('File size must lest than 300MB', false);\r\n            return;\r\n        }\r\n\r\n        this.currentConversation.messages.unshift(message);\r\n        this.currentConversation.lastestMessage = message;\r\n\r\n        const formData: FormData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        formData.append('message', new Blob([JSON\r\n            .stringify(message)], {\r\n            type: 'application/json'\r\n        }));\r\n\r\n        return this.http.post(this.MULTIMEDIA_MESSAGE_BASE_URL, formData, {\r\n            reportProgress: true,\r\n            observe: 'events'\r\n        }).pipe(\r\n            tap((event: HttpEvent<any>) => {\r\n                if (event.type === HttpEventType.UploadProgress) {\r\n                    const progress: number = Math.round((100 * event.loaded) / event.total);\r\n                    if (progress != 100){\r\n                        ObservableUtil.notify(this.fileUploadedSubject, progress);\r\n                    }\r\n                }\r\n            }),\r\n            filter((event: HttpEvent<any>) => event.type === HttpEventType.Response),\r\n            map((event: HttpResponse<any>) => {\r\n                return event.body as ResponseModel\r\n            })\r\n        );\r\n    }\r\n\r\n    fetchMessages(conversationId: string, page: number): Observable<ResponseModel> {\r\n        const url: string = `${this.CONVERSATIONS_BASE_URL}/${conversationId}/messages?page=${page}`;\r\n        return this.http.get<ResponseModel>(url).pipe(\r\n            tap((res: ResponseModel) => {\r\n                this.currentConversation.messages = [...this.currentConversation.messages, ...res.data];\r\n                ObservableUtil.notify(this.currentConversationSubject, this.currentConversation);\r\n            })\r\n        );\r\n    }\r\n\r\n    subscribeMarkNewMessageAsRead(): void {\r\n        const URL: string = `${WEB_SOCKET_PRIVATE_ENDPOINT}/user/${SessionService.getCurrentUser().id}/conversationReadStatus`;\r\n\r\n        this.stompService.watch(URL, (res: ResponseModel) => {\r\n            \r\n            if (!res.success){\r\n                this.toastService.show(res.message, false);\r\n                return;\r\n            }\r\n\r\n            this.currentConversation.hasNewMessage = false;\r\n            this.conversations.find(con => con.id === this.currentConversation.id).hasNewMessage = false;\r\n\r\n            ObservableUtil.notify(this.conversationsSubject, this.conversations);\r\n            ObservableUtil.notify(this.currentConversationSubject, this.currentConversation);\r\n        })\r\n    }\r\n\r\n    unsubscribeConversationChannel(conversationId: string): void {\r\n        const url: string = `${WEB_SOCKET_PUBLIC_ENDPOINT}/conversations/${conversationId}/textMessages`;\r\n        this.stompService.unwatch(url, () => {\r\n        });\r\n    }\r\n \r\n   \r\n    \r\n}\r\n","export class DeleteAccountRequest {\r\n    userId: string;\r\n    password: string;\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConversationsComponent } from './components/conversations/conversations.component';\nimport { ConversationDetailComponent } from './components/conversation-detail/conversation-detail.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { ContactFeaturesComponent } from './components/contact-features/contact-features.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { SignInComponent } from './components/signin/signin.component';\nimport { SignUpComponent } from './components/signup/signup.component';\nimport { MainComponent } from './components/main/main.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { ReceivedContactRequestComponent } from './components/received-contact-requests/received-contact-requests.component';\nimport { SentContactRequestComponent } from './components/sent-contact-requests/sent-contact-requests.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'signin',\n        component: SignInComponent\n      },\n      {\n        path: 'signup',\n        component: SignUpComponent\n      },\n      { path: '', redirectTo: 'signin', pathMatch: 'full' }\n    ]\n  },\n  {\n    path: '',\n    component: MainComponent,\n    children: [\n      {\n        path: 'conversations',\n        component: ConversationsComponent,\n        children: [\n          {\n            path: '',\n            component: WelcomeComponent\n          },\n          {\n            path: ':id',\n            component: ConversationDetailComponent\n          }\n        ]\n      },\n      {\n        path: 'contactFeatures',\n        component: ContactFeaturesComponent,\n        children: [\n          {\n            path: 'contacts',\n            component: ContactsComponent\n          },\n          {\n            path: 'receivedContactRequests',\n            component: ReceivedContactRequestComponent\n          },\n          {\n            path: 'sentContactRequests',\n            component: SentContactRequestComponent\n          }\n        ]\n      }\n    ]\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport * as RecordRTC from 'recordrtc';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class VoiceRecorderService {\r\n    private stream: MediaStream;\r\n    private recorder: RecordRTC;\r\n\r\n\r\n    async startRecording() {\r\n        try {\r\n            this.stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\r\n            this.recorder = new RecordRTC(this.stream, { type: 'audio' });\r\n            this.recorder.startRecording();\r\n        } catch (err) {\r\n            alert(\"DEVICE NOT FOUND\");\r\n        }\r\n    }\r\n\r\n    async stopRecording() {\r\n        return new Promise((resolve) => {\r\n            this.recorder.stopRecording(() => {\r\n                let blob = this.recorder.getBlob();\r\n                resolve(blob);\r\n\r\n                // free up resources\r\n                this.recorder.destroy();\r\n                this.recorder = null;\r\n\r\n                // stop media stream\r\n                this.stream.getAudioTracks().forEach(track => track.stop());\r\n                this.stream = null;\r\n            });\r\n        });\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ChangePasswordModalComponent } from '../change-password-modal/change-password-modal.component';\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Subscription } from 'rxjs';\nimport { NGB_MODAL_BACKDROP_STATIC_OPTIONS } from 'src/app/config';\nimport { ConfirmModalComponent } from '../confirm-modal/confirm-modal.component';\nimport { DeleteAccountModalComponent } from '../delete-account-modal/delete-account-modal.component';\nimport { ToastService } from '../toast/toast.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  \n  private modalConfirmSubscription: Subscription;\n\n  constructor(private ngbModal: NgbModal,\n    private router: Router,\n    private toastService: ToastService,\n    private authService: AuthService) {}\n\n  onChangePasswordModalOpened(): void {\n    this.ngbModal.open(ChangePasswordModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\n  }\n\n  onSignedOut(): void {\n    const modalRef: NgbModalRef = this.ngbModal.open(ConfirmModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\n    this.modalConfirmSubscription = modalRef.componentInstance.onModalConfirmed().subscribe(() => {\n      modalRef.close();\n      this.modalConfirmSubscription.unsubscribe();\n      this.authService.signOut();\n      this.toastService.show('Signed out successfully', true);\n      this.router.navigate(['/auth/signin']);\n    });\n  }\n\n  onDeleteAccountModalOpened(): void {\n    this.ngbModal.open(DeleteAccountModalComponent, NGB_MODAL_BACKDROP_STATIC_OPTIONS);\n  }\n}\n","<div class=\"h-100 bg-success\">\r\n    <div class=\"d-flex flex-column h-100 justify-content-around\">\r\n        <div class=\"d-flex flex-column\">\r\n            <a class=\"btn btn-success p-3\" routerLink=\"/conversations\" routerLinkActive=\"active\">\r\n                <i class=\"fa-regular fa-comments fa-lg\"></i>\r\n            </a>\r\n            <a class=\"btn btn btn-success p-3\" routerLink=\"/contactFeatures\" routerLinkActive=\"active\">\r\n                <i class=\"fa-regular fa-address-book fa-lg\"></i>\r\n            </a>\r\n        </div>\r\n        <div class=\"btn-group dropend \">\r\n            <button  class=\"btn btn btn-success p-3\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <i class=\"fa-solid fa-gear fa-lg\"></i>\r\n            </button>\r\n            <div class=\"dropdown-menu dropdown-menu-right\">\r\n                <button (click)=\"onChangePasswordModalOpened()\" class=\"dropdown-item\">Change password</button>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <button (click)=\"onSignedOut()\" class=\"dropdown-item text-danger\">Sign out</button>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <button (click)=\"onDeleteAccountModalOpened()\" class=\"dropdown-item text-danger\">Delete account</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","\r\nexport class ChangePasswordRequest {\r\n    userId: string;\r\n    oldPassword: string;\r\n    newPassword: string;\r\n    confirmNewPassword: string;\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}